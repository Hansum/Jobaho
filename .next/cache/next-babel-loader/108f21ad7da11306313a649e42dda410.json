{"ast":null,"code":"var __jsx = React.createElement;\nimport React, { Component } from \"react\";\nimport useSWR from \"swr\";\nimport JobCardsLayout from \"../components/JobsectionCards\";\nimport ArticleLayout from \"../components/ArticleLayout\";\nimport ErrorPage from \"next/error\";\nimport { Box, Flex, Link, Text } from \"@chakra-ui/core\"; // const fetcher = async (url) => {\n//   const res = await fetch(url);\n//   const data = await res.json();\n//   if (res.status !== 200) {\n//     throw new Error(\"error\", data.message);\n//   }\n//   return data;\n// };\n// export default function FetchData() {\n//   const { data, error } = useSWR(\"/api/job/index\", fetcher);\n//   console.log(\"Data:\", data);\n//   if (error) return <div>Failed to load entry level api</div>;\n//   if (!data) return <div>Loading...</div>;\n//   //BOX ----> DIV\n//   return (\n//     <Flex flexWrap=\"wrap\" justifyContent=\"center\">\n//       {data.map((res, index) => {\n//         const { job_position, company, location, url } = res;\n//         return (\n//           <Box\n//             m={3}\n//             borderWidth=\"1px\"\n//             bg=\"white\"\n//             flex=\"0 1 24%\"\n//             p={6}\n//             rounded=\"lg\"\n//             key={index}\n//           >\n//             <Box>\n//               <Box\n//                 color=\"gray.500\"\n//                 fontWeight=\"semibold\"\n//                 letterSpacing=\"wide\"\n//                 textTransform=\"uppercase\"\n//                 fontSize=\"xs\"\n//                 textAlign=\"center\"\n//               >\n//                 {company}\n//               </Box>\n//             </Box>\n//             <Box\n//               mt=\"2\"\n//               fontWeight=\"semibold\"\n//               fontSize=\"lg\"\n//               textAlign=\"center\"\n//               color=\"blue.600\"\n//             >\n//               <Link href={url} isExternal>\n//                 {job_position}\n//               </Link>\n//             </Box>\n//             <Box mt=\"2\" color=\"gray.600\" fontSize=\"sm\" textAlign=\"center\">\n//               {location}\n//             </Box>\n//           </Box>\n//         );\n//       })}\n//     </Flex>\n//   );\n// }\n\nvar jobPage = function jobPage(_ref) {\n  var result = _ref.result;\n\n  if (!result) {\n    // return <ErrorPage statusCode={404}></ErrorPage>;\n    console.log(\"Data not found\");\n  }\n\n  return __jsx(Flex, {\n    flexWrap: \"wrap\",\n    justifyContent: \"center\"\n  }, __jsx(Text, null, \"Junior/Entry level Jobs\"), result.data.entry_level.map(function (res, index) {\n    var Job_Position = res.Job_Position,\n        Job_Company_Name = res.Job_Company_Name,\n        Job_Location = res.Job_Location,\n        Job_url = res.Job_url;\n    return __jsx(Box, {\n      m: 3,\n      borderWidth: \"1px\",\n      bg: \"white\",\n      flex: \"0 1 24%\",\n      p: 6,\n      rounded: \"lg\",\n      mt: 5,\n      key: index\n    }, __jsx(Box, null, __jsx(Box, {\n      color: \"gray.500\",\n      fontWeight: \"semibold\",\n      letterSpacing: \"wide\",\n      textTransform: \"uppercase\",\n      fontSize: \"xs\",\n      textAlign: \"center\"\n    }, Job_Company_Name)), __jsx(Box, {\n      mt: \"2\",\n      fontWeight: \"semibold\",\n      fontSize: \"lg\",\n      textAlign: \"center\",\n      color: \"blue.600\"\n    }, __jsx(Link, {\n      href: Job_url,\n      isExternal: true\n    }, Job_Position)), __jsx(Box, {\n      mt: \"2\",\n      color: \"gray.600\",\n      fontSize: \"sm\",\n      textAlign: \"center\"\n    }, Job_Location));\n  }));\n};\n\nexport var __N_SSP = true;\nexport default jobPage;","map":{"version":3,"sources":["C:/Users/chris/Desktop/jobaho/pages/jobSection.js"],"names":["React","Component","useSWR","JobCardsLayout","ArticleLayout","ErrorPage","Box","Flex","Link","Text","jobPage","result","console","log","data","entry_level","map","res","index","Job_Position","Job_Company_Name","Job_Location","Job_url"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,MAAP,MAAmB,KAAnB;AACA,OAAOC,cAAP,MAA2B,+BAA3B;AACA,OAAOC,aAAP,MAA0B,6BAA1B;AAEA,OAAOC,SAAP,MAAsB,YAAtB;AACA,SAASC,GAAT,EAAcC,IAAd,EAAoBC,IAApB,EAA0BC,IAA1B,QAAsC,iBAAtC,C,CAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,IAAMC,OAAO,GAAG,SAAVA,OAAU,OAAgB;AAAA,MAAbC,MAAa,QAAbA,MAAa;;AAC9B,MAAI,CAACA,MAAL,EAAa;AACX;AACAC,IAAAA,OAAO,CAACC,GAAR,CAAY,gBAAZ;AACD;;AAED,SACE,MAAC,IAAD;AAAM,IAAA,QAAQ,EAAC,MAAf;AAAsB,IAAA,cAAc,EAAC;AAArC,KACE,MAAC,IAAD,kCADF,EAEGF,MAAM,CAACG,IAAP,CAAYC,WAAZ,CAAwBC,GAAxB,CAA4B,UAACC,GAAD,EAAMC,KAAN,EAAgB;AAAA,QACnCC,YADmC,GACuBF,GADvB,CACnCE,YADmC;AAAA,QACrBC,gBADqB,GACuBH,GADvB,CACrBG,gBADqB;AAAA,QACHC,YADG,GACuBJ,GADvB,CACHI,YADG;AAAA,QACWC,OADX,GACuBL,GADvB,CACWK,OADX;AAE3C,WACE,MAAC,GAAD;AACE,MAAA,CAAC,EAAE,CADL;AAEE,MAAA,WAAW,EAAC,KAFd;AAGE,MAAA,EAAE,EAAC,OAHL;AAIE,MAAA,IAAI,EAAC,SAJP;AAKE,MAAA,CAAC,EAAE,CALL;AAME,MAAA,OAAO,EAAC,IANV;AAOE,MAAA,EAAE,EAAE,CAPN;AAQE,MAAA,GAAG,EAAEJ;AARP,OAUE,MAAC,GAAD,QACE,MAAC,GAAD;AACE,MAAA,KAAK,EAAC,UADR;AAEE,MAAA,UAAU,EAAC,UAFb;AAGE,MAAA,aAAa,EAAC,MAHhB;AAIE,MAAA,aAAa,EAAC,WAJhB;AAKE,MAAA,QAAQ,EAAC,IALX;AAME,MAAA,SAAS,EAAC;AANZ,OAQGE,gBARH,CADF,CAVF,EAsBE,MAAC,GAAD;AACE,MAAA,EAAE,EAAC,GADL;AAEE,MAAA,UAAU,EAAC,UAFb;AAGE,MAAA,QAAQ,EAAC,IAHX;AAIE,MAAA,SAAS,EAAC,QAJZ;AAKE,MAAA,KAAK,EAAC;AALR,OAOE,MAAC,IAAD;AAAM,MAAA,IAAI,EAAEE,OAAZ;AAAqB,MAAA,UAAU;AAA/B,OACGH,YADH,CAPF,CAtBF,EAiCE,MAAC,GAAD;AAAK,MAAA,EAAE,EAAC,GAAR;AAAY,MAAA,KAAK,EAAC,UAAlB;AAA6B,MAAA,QAAQ,EAAC,IAAtC;AAA2C,MAAA,SAAS,EAAC;AAArD,OACGE,YADH,CAjCF,CADF;AAuCD,GAzCA,CAFH,CADF;AA+CD,CArDD;;;AAwEA,eAAeX,OAAf","sourcesContent":["import React, { Component } from \"react\";\r\nimport useSWR from \"swr\";\r\nimport JobCardsLayout from \"../components/JobsectionCards\";\r\nimport ArticleLayout from \"../components/ArticleLayout\";\r\nimport fetch from \"isomorphic-unfetch\";\r\nimport ErrorPage from \"next/error\";\r\nimport { Box, Flex, Link, Text } from \"@chakra-ui/core\";\r\n\r\n// const fetcher = async (url) => {\r\n//   const res = await fetch(url);\r\n//   const data = await res.json();\r\n\r\n//   if (res.status !== 200) {\r\n//     throw new Error(\"error\", data.message);\r\n//   }\r\n//   return data;\r\n// };\r\n\r\n// export default function FetchData() {\r\n//   const { data, error } = useSWR(\"/api/job/index\", fetcher);\r\n//   console.log(\"Data:\", data);\r\n\r\n//   if (error) return <div>Failed to load entry level api</div>;\r\n//   if (!data) return <div>Loading...</div>;\r\n\r\n//   //BOX ----> DIV\r\n//   return (\r\n//     <Flex flexWrap=\"wrap\" justifyContent=\"center\">\r\n//       {data.map((res, index) => {\r\n//         const { job_position, company, location, url } = res;\r\n//         return (\r\n//           <Box\r\n//             m={3}\r\n//             borderWidth=\"1px\"\r\n//             bg=\"white\"\r\n//             flex=\"0 1 24%\"\r\n//             p={6}\r\n//             rounded=\"lg\"\r\n//             key={index}\r\n//           >\r\n//             <Box>\r\n//               <Box\r\n//                 color=\"gray.500\"\r\n//                 fontWeight=\"semibold\"\r\n//                 letterSpacing=\"wide\"\r\n//                 textTransform=\"uppercase\"\r\n//                 fontSize=\"xs\"\r\n//                 textAlign=\"center\"\r\n//               >\r\n//                 {company}\r\n//               </Box>\r\n//             </Box>\r\n//             <Box\r\n//               mt=\"2\"\r\n//               fontWeight=\"semibold\"\r\n//               fontSize=\"lg\"\r\n//               textAlign=\"center\"\r\n//               color=\"blue.600\"\r\n//             >\r\n//               <Link href={url} isExternal>\r\n//                 {job_position}\r\n//               </Link>\r\n//             </Box>\r\n//             <Box mt=\"2\" color=\"gray.600\" fontSize=\"sm\" textAlign=\"center\">\r\n//               {location}\r\n//             </Box>\r\n//           </Box>\r\n//         );\r\n//       })}\r\n//     </Flex>\r\n//   );\r\n// }\r\n\r\nconst jobPage = ({ result }) => {\r\n  if (!result) {\r\n    // return <ErrorPage statusCode={404}></ErrorPage>;\r\n    console.log(\"Data not found\");\r\n  }\r\n\r\n  return (\r\n    <Flex flexWrap=\"wrap\" justifyContent=\"center\">\r\n      <Text>Junior/Entry level Jobs</Text>\r\n      {result.data.entry_level.map((res, index) => {\r\n        const { Job_Position, Job_Company_Name, Job_Location, Job_url } = res;\r\n        return (\r\n          <Box\r\n            m={3}\r\n            borderWidth=\"1px\"\r\n            bg=\"white\"\r\n            flex=\"0 1 24%\"\r\n            p={6}\r\n            rounded=\"lg\"\r\n            mt={5}\r\n            key={index}\r\n          >\r\n            <Box>\r\n              <Box\r\n                color=\"gray.500\"\r\n                fontWeight=\"semibold\"\r\n                letterSpacing=\"wide\"\r\n                textTransform=\"uppercase\"\r\n                fontSize=\"xs\"\r\n                textAlign=\"center\"\r\n              >\r\n                {Job_Company_Name}\r\n              </Box>\r\n            </Box>\r\n            <Box\r\n              mt=\"2\"\r\n              fontWeight=\"semibold\"\r\n              fontSize=\"lg\"\r\n              textAlign=\"center\"\r\n              color=\"blue.600\"\r\n            >\r\n              <Link href={Job_url} isExternal>\r\n                {Job_Position}\r\n              </Link>\r\n            </Box>\r\n            <Box mt=\"2\" color=\"gray.600\" fontSize=\"sm\" textAlign=\"center\">\r\n              {Job_Location}\r\n            </Box>\r\n          </Box>\r\n        );\r\n      })}\r\n    </Flex>\r\n  );\r\n};\r\n\r\nexport async function getServerSideProps({ req }) {\r\n  try {\r\n    const baseUrl = req ? `${req.protocol}://${req.get(\"Host\")}` : \"\";\r\n    const res = await fetch(`${baseUrl}/api/jobPosition`);\r\n    const result = await res.json();\r\n\r\n    return {\r\n      props: { result },\r\n    };\r\n  } catch {\r\n    res.statusCode = 404;\r\n    return {\r\n      props: {},\r\n    };\r\n  }\r\n}\r\n\r\nexport default jobPage;\r\n"]},"metadata":{},"sourceType":"module"}