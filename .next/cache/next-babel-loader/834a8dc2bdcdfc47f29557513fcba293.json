{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\n// import React from \"react\";\n// import useSWR from \"swr\";\n// import jobCardsLayout from \"../components/JobsectionCards\";\n// import fetch from \"isomorphic-unfetch\";\n// import { Box, Flex, Link, Text, Button, ButtonGroup } from \"@chakra-ui/core\";\n// const fetcher = async (url) => {\n//   const res = await fetch(url);\n//   const data = await res.json();\n//   if (res.status !== 200) {\n//     throw new Error(\"error\", data.message);\n//   }\n//   return data;\n// };\n// export default function FetchData() {\n//   const { data, error } = useSWR(\"/api/seniorAPI\", fetcher);\n//   // console.log(\"Data:\", data);\n//   if (error) return <div>Failed to load entry level api</div>;\n//   if (!data) return <div>Loading...</div>;\n//   //BOX ----> DIV\n//   return (\n//     <jobCardsLayout>\n//       <Box>\n//         <Text\n//           color=\"white\"\n//           m={5}\n//           textAlign=\"center\"\n//           fontSize=\"30px\"\n//           fontFamily=\"Sen\"\n//         >\n//           Senior Level Jobs\n//         </Text>\n//         <Flex flexWrap=\"wrap\" justifyContent=\"center\">\n//           {data.map((res, index) => {\n//             const { title, company, location, url } = res;\n//             return (\n//               <Box\n//                 m={3}\n//                 borderWidth=\"1px\"\n//                 bg=\"white\"\n//                 flex=\"0 1 24%\"\n//                 p={6}\n//                 rounded=\"lg\"\n//                 mt={5}\n//                 key={index}\n//               >\n//                 <Box>\n//                   <Box\n//                     color=\"gray.500\"\n//                     fontWeight=\"semibold\"\n//                     letterSpacing=\"wide\"\n//                     textTransform=\"uppercase\"\n//                     fontSize=\"xs\"\n//                     textAlign=\"center\"\n//                   >\n//                     {company}\n//                   </Box>\n//                 </Box>\n//                 <Box\n//                   mt=\"2\"\n//                   fontWeight=\"semibold\"\n//                   fontSize=\"lg\"\n//                   textAlign=\"center\"\n//                   color=\"blue.600\"\n//                 >\n//                   <Link href={url} isExternal>\n//                     {title}\n//                   </Link>\n//                 </Box>\n//                 <Box mt=\"2\" color=\"gray.600\" fontSize=\"sm\" textAlign=\"center\">\n//                   {location}\n//                 </Box>\n//               </Box>\n//             );\n//           })}\n//         </Flex>\n//       </Box>\n//     </jobCardsLayout>\n//   );\n// }\nimport useSWR from \"swr\";\n\nvar fetcher = function fetcher(url) {\n  var res, data;\n  return _regeneratorRuntime.async(function fetcher$(_context) {\n    while (1) {\n      switch (_context.prev = _context.next) {\n        case 0:\n          _context.next = 2;\n          return _regeneratorRuntime.awrap(url);\n\n        case 2:\n          res = _context.sent;\n          _context.next = 5;\n          return _regeneratorRuntime.awrap(res.json());\n\n        case 5:\n          data = _context.sent;\n\n          if (!(res.status !== 200)) {\n            _context.next = 8;\n            break;\n          }\n\n          throw new Error(\"error\", data.message);\n\n        case 8:\n          return _context.abrupt(\"return\", data);\n\n        case 9:\n        case \"end\":\n          return _context.stop();\n      }\n    }\n  }, null, null, null, Promise);\n};","map":{"version":3,"sources":["C:/Users/chris/Desktop/jobaho/pages/senior.js"],"names":["useSWR","fetcher","url","res","json","data","status","Error","message"],"mappings":";AAAA;AACA;AACA;AACA;AAEA;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAOA,MAAP,MAAmB,KAAnB;;AAEA,IAAMC,OAAO,GAAG,SAAVA,OAAU,CAAOC,GAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,2CACIA,GADJ;;AAAA;AACRC,UAAAA,GADQ;AAAA;AAAA,2CAEKA,GAAG,CAACC,IAAJ,EAFL;;AAAA;AAERC,UAAAA,IAFQ;;AAAA,gBAIVF,GAAG,CAACG,MAAJ,KAAe,GAJL;AAAA;AAAA;AAAA;;AAAA,gBAKN,IAAIC,KAAJ,CAAU,OAAV,EAAmBF,IAAI,CAACG,OAAxB,CALM;;AAAA;AAAA,2CAOPH,IAPO;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,CAAhB","sourcesContent":["// import React from \"react\";\r\n// import useSWR from \"swr\";\r\n// import jobCardsLayout from \"../components/JobsectionCards\";\r\n// import fetch from \"isomorphic-unfetch\";\r\n\r\n// import { Box, Flex, Link, Text, Button, ButtonGroup } from \"@chakra-ui/core\";\r\n\r\n// const fetcher = async (url) => {\r\n//   const res = await fetch(url);\r\n//   const data = await res.json();\r\n\r\n//   if (res.status !== 200) {\r\n//     throw new Error(\"error\", data.message);\r\n//   }\r\n//   return data;\r\n// };\r\n\r\n// export default function FetchData() {\r\n//   const { data, error } = useSWR(\"/api/seniorAPI\", fetcher);\r\n//   // console.log(\"Data:\", data);\r\n\r\n//   if (error) return <div>Failed to load entry level api</div>;\r\n//   if (!data) return <div>Loading...</div>;\r\n\r\n//   //BOX ----> DIV\r\n//   return (\r\n//     <jobCardsLayout>\r\n//       <Box>\r\n//         <Text\r\n//           color=\"white\"\r\n//           m={5}\r\n//           textAlign=\"center\"\r\n//           fontSize=\"30px\"\r\n//           fontFamily=\"Sen\"\r\n//         >\r\n//           Senior Level Jobs\r\n//         </Text>\r\n//         <Flex flexWrap=\"wrap\" justifyContent=\"center\">\r\n//           {data.map((res, index) => {\r\n//             const { title, company, location, url } = res;\r\n//             return (\r\n//               <Box\r\n//                 m={3}\r\n//                 borderWidth=\"1px\"\r\n//                 bg=\"white\"\r\n//                 flex=\"0 1 24%\"\r\n//                 p={6}\r\n//                 rounded=\"lg\"\r\n//                 mt={5}\r\n//                 key={index}\r\n//               >\r\n//                 <Box>\r\n//                   <Box\r\n//                     color=\"gray.500\"\r\n//                     fontWeight=\"semibold\"\r\n//                     letterSpacing=\"wide\"\r\n//                     textTransform=\"uppercase\"\r\n//                     fontSize=\"xs\"\r\n//                     textAlign=\"center\"\r\n//                   >\r\n//                     {company}\r\n//                   </Box>\r\n//                 </Box>\r\n//                 <Box\r\n//                   mt=\"2\"\r\n//                   fontWeight=\"semibold\"\r\n//                   fontSize=\"lg\"\r\n//                   textAlign=\"center\"\r\n//                   color=\"blue.600\"\r\n//                 >\r\n//                   <Link href={url} isExternal>\r\n//                     {title}\r\n//                   </Link>\r\n//                 </Box>\r\n//                 <Box mt=\"2\" color=\"gray.600\" fontSize=\"sm\" textAlign=\"center\">\r\n//                   {location}\r\n//                 </Box>\r\n//               </Box>\r\n//             );\r\n//           })}\r\n//         </Flex>\r\n//       </Box>\r\n//     </jobCardsLayout>\r\n//   );\r\n// }\r\nimport useSWR from \"swr\";\r\n\r\nconst fetcher = async (url) => {\r\n  const res = await url;\r\n  const data = await res.json();\r\n\r\n  if (res.status !== 200) {\r\n    throw new Error(\"error\", data.message);\r\n  }\r\n  return data;\r\n};\r\n"]},"metadata":{},"sourceType":"module"}