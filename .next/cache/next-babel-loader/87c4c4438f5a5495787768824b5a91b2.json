{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nvar _jsxFileName = \"C:\\\\Users\\\\chris\\\\Desktop\\\\Jobaho\\\\pages\\\\junior.js\";\nvar __jsx = React.createElement;\nimport React, { useState, useEffect } from \"react\";\nimport Router, { useRouter } from \"next/router\";\nimport useSWR, { mutate } from \"swr\";\nimport JobCardsLayout from \"../components/JobsectionCards\";\nimport fetch from \"isomorphic-unfetch\";\nimport NextLink from \"next/link\";\nimport Loader from \"../components/LoadingLayout\";\nimport JobCards from \"../components/CardsLayout\";\nimport { Box, Flex, Text, Button, ButtonGroup, Link, Input } from \"@chakra-ui/core\";\n\nvar fetcher = function fetcher() {\n  var res,\n      data,\n      _args = arguments;\n  return _regeneratorRuntime.async(function fetcher$(_context) {\n    while (1) {\n      switch (_context.prev = _context.next) {\n        case 0:\n          _context.next = 2;\n          return _regeneratorRuntime.awrap(fetch.apply(void 0, _args));\n\n        case 2:\n          res = _context.sent;\n          _context.next = 5;\n          return _regeneratorRuntime.awrap(res.json());\n\n        case 5:\n          data = _context.sent;\n\n          if (!(res.status !== 200)) {\n            _context.next = 8;\n            break;\n          }\n\n          throw new Error(\"error\", data.message);\n\n        case 8:\n          return _context.abrupt(\"return\", data);\n\n        case 9:\n        case \"end\":\n          return _context.stop();\n      }\n    }\n  }, null, null, null, Promise);\n};\n\nexport default function FetchData(req, res) {\n  var _this = this;\n\n  var _useState = useState(\"\"),\n      value = _useState[0],\n      setValue = _useState[1];\n\n  var _useRouter = useRouter(),\n      query = _useRouter.query; // const { data, error } = useSWR(\"/api/juniorAPI\", fetcher);\n\n\n  var _useSWR = useSWR(\"/api/juniorAPI\".concat(query.title ? \"?keyword=\" + query.title : \"\"), fetcher),\n      data = _useSWR.data,\n      error = _useSWR.error;\n\n  console.log(\"Query string\", query.title);\n\n  var handleSubmit = function handleSubmit(e) {\n    return _regeneratorRuntime.async(function handleSubmit$(_context2) {\n      while (1) {\n        switch (_context2.prev = _context2.next) {\n          case 0:\n            e.preventDefault();\n            Router.push({\n              pathname: \"/junior\",\n              query: {\n                title: value\n              }\n            });\n\n          case 2:\n          case \"end\":\n            return _context2.stop();\n        }\n      }\n    }, null, null, null, Promise);\n  };\n\n  console.log(\"Input value:\", data);\n  if (error) return __jsx(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 21\n    }\n  }, \"Failed to load entry level api\");\n\n  if (!data) {\n    return __jsx(Loader, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 12\n      }\n    }, \"Scraping Junior Level Jobs\");\n  } //BOX ----> DIV\n\n\n  return __jsx(JobCardsLayout, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 5\n    }\n  }, __jsx(Box, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 7\n    }\n  }, __jsx(Box, {\n    p: 3,\n    textAlign: \"center\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 9\n    }\n  }, __jsx(Text, {\n    color: \"white\",\n    textAlign: \"center\",\n    fontSize: \"40px\",\n    fontFamily: \"Sen\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 11\n    }\n  }, \"Junior / Entry Level Jobs\")), __jsx(Text, {\n    color: \"white\",\n    m: 5,\n    textAlign: \"center\",\n    fontSize: \"20px\",\n    fontFamily: \"Sen\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 9\n    }\n  }, \"Number of Jobs: \", data.length), __jsx(\"form\", {\n    onSubmit: handleSubmit,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 9\n    }\n  }, __jsx(Input, {\n    textAlign: \"center\",\n    type: \"text\",\n    placeholder: \"Search job position..\",\n    value: value,\n    onChange: function onChange(event) {\n      return setValue(event.target.value);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 11\n    }\n  })), __jsx(Flex, {\n    flexWrap: \"wrap\",\n    justifyContent: \"center\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 9\n    }\n  }, data.entry_level.map(function (res, index) {\n    var Job_Position = res.Job_Position,\n        Job_Company_Name = res.Job_Company_Name,\n        Job_Location = res.Job_Location,\n        Job_url = res.Job_url;\n    return __jsx(JobCards, {\n      index: index,\n      title: Job_Position,\n      company: Job_Company_Name,\n      location: Job_Location,\n      url: Job_url,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 99,\n        columnNumber: 15\n      }\n    });\n  }))));\n}","map":{"version":3,"sources":["C:/Users/chris/Desktop/Jobaho/pages/junior.js"],"names":["React","useState","useEffect","Router","useRouter","useSWR","mutate","JobCardsLayout","fetch","NextLink","Loader","JobCards","Box","Flex","Text","Button","ButtonGroup","Link","Input","fetcher","res","json","data","status","Error","message","FetchData","req","value","setValue","query","title","error","console","log","handleSubmit","e","preventDefault","push","pathname","length","event","target","entry_level","map","index","Job_Position","Job_Company_Name","Job_Location","Job_url"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport Router, { useRouter } from \"next/router\";\r\nimport useSWR, { mutate } from \"swr\";\r\nimport JobCardsLayout from \"../components/JobsectionCards\";\r\nimport fetch from \"isomorphic-unfetch\";\r\nimport NextLink from \"next/link\";\r\nimport Loader from \"../components/LoadingLayout\";\r\nimport JobCards from \"../components/CardsLayout\";\r\nimport {\r\n  Box,\r\n  Flex,\r\n  Text,\r\n  Button,\r\n  ButtonGroup,\r\n  Link,\r\n  Input,\r\n} from \"@chakra-ui/core\";\r\n\r\nconst fetcher = async (...url) => {\r\n  const res = await fetch(...url);\r\n  const data = await res.json();\r\n\r\n  if (res.status !== 200) {\r\n    throw new Error(\"error\", data.message);\r\n  }\r\n  return data;\r\n};\r\n\r\nexport default function FetchData(req, res) {\r\n  const [value, setValue] = useState(\"\");\r\n  const { query } = useRouter();\r\n  // const { data, error } = useSWR(\"/api/juniorAPI\", fetcher);\r\n\r\n  const { data, error } = useSWR(\r\n    `/api/juniorAPI${query.title ? \"?keyword=\" + query.title : \"\"}`,\r\n    fetcher\r\n  );\r\n\r\n  console.log(\"Query string\", query.title);\r\n\r\n  const handleSubmit = async (e) => {\r\n    e.preventDefault();\r\n\r\n    Router.push({\r\n      pathname: \"/junior\",\r\n      query: { title: value },\r\n    });\r\n  };\r\n\r\n  console.log(\"Input value:\", data);\r\n\r\n  if (error) return <div>Failed to load entry level api</div>;\r\n  if (!data) {\r\n    return <Loader>Scraping Junior Level Jobs</Loader>;\r\n  }\r\n\r\n  //BOX ----> DIV\r\n  return (\r\n    <JobCardsLayout>\r\n      <Box>\r\n        <Box p={3} textAlign=\"center\">\r\n          <Text\r\n            color=\"white\"\r\n            textAlign=\"center\"\r\n            fontSize=\"40px\"\r\n            fontFamily=\"Sen\"\r\n          >\r\n            Junior / Entry Level Jobs\r\n          </Text>\r\n        </Box>\r\n\r\n        <Text\r\n          color=\"white\"\r\n          m={5}\r\n          textAlign=\"center\"\r\n          fontSize=\"20px\"\r\n          fontFamily=\"Sen\"\r\n        >\r\n          Number of Jobs: {data.length}\r\n        </Text>\r\n        <form onSubmit={handleSubmit}>\r\n          <Input\r\n            textAlign=\"center\"\r\n            type=\"text\"\r\n            placeholder=\"Search job position..\"\r\n            value={value}\r\n            onChange={(event) => setValue(event.target.value)}\r\n          ></Input>\r\n        </form>\r\n        <Flex flexWrap=\"wrap\" justifyContent=\"center\">\r\n          {data.entry_level.map((res, index) => {\r\n            const {\r\n              Job_Position,\r\n              Job_Company_Name,\r\n              Job_Location,\r\n              Job_url,\r\n            } = res;\r\n            return (\r\n              <JobCards\r\n                index={index}\r\n                title={Job_Position}\r\n                company={Job_Company_Name}\r\n                location={Job_Location}\r\n                url={Job_url}\r\n              ></JobCards>\r\n            );\r\n          })}\r\n        </Flex>\r\n      </Box>\r\n    </JobCardsLayout>\r\n  );\r\n}\r\n"]},"metadata":{},"sourceType":"module"}