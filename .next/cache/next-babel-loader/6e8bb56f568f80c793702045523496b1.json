{"ast":null,"code":"var __jsx = React.createElement;\nimport React, { Component } from \"react\";\nimport useSWR from \"swr\";\nimport JobCardsLayout from \"../components/JobsectionCards\";\nimport ArticleLayout from \"../components/ArticleLayout\";\nimport fetch from \"isomorphic-unfetch\";\nimport ErrorPage from \"next/error\";\nimport { Box, Flex } from \"@chakra-ui/core\";\n\nconst fetcher = async url => {\n  const res = await fetch(url);\n  const data = await res.json();\n\n  if (res.status !== 200) {\n    throw new Error(\"error\", data.message);\n  }\n\n  return data;\n};\n\nexport default function FetchData() {\n  const {\n    data,\n    error\n  } = useSWR(\"/api/job/index\", fetcher);\n  console.log(\"Data:\", data);\n  if (error) return __jsx(\"div\", null, \"Failed to load entry level api\");\n  if (!data) return __jsx(\"div\", null, \"Loading...\"); // return (\n  //   <Flex flexWrap=\"wrap\" alignItems=\"stretch\">\n  //     {data.map((res, index) => {\n  //       const { job_position, company, location, url } = res;\n  //       return (\n  //         <Box maxW=\"md\" m={5} borderWidth=\"1px\" rounded=\"lg\" bg=\"white\">\n  //           <Box p=\"8\">\n  //             <Box d=\"flex\" alignItems=\"baseline\">\n  //               <Box\n  //                 color=\"gray.500\"\n  //                 fontWeight=\"semibold\"\n  //                 letterSpacing=\"wide\"\n  //                 fontSize=\"xs\"\n  //                 textTransform=\"uppercase\"\n  //                 flexWrap=\"wrap\"\n  //               >\n  //                 {company}\n  //               </Box>\n  //             </Box>\n  //             <Box d=\"flex\" alignItems=\"baseline\">\n  //               <Box\n  //                 flexWrap=\"wrap\"\n  //                 mt=\"1\"\n  //                 fontWeight=\"semibold\"\n  //                 as=\"h4\"\n  //                 lineHeight=\"tight\"\n  //               >\n  //                 {job_position}\n  //               </Box>\n  //             </Box>\n  //             <Box d=\"flex\" mt=\"2\" alignItems=\"center\">\n  //               <Box as=\"span\" color=\"gray.600\" fontSize=\"sm\">\n  //                 {location}\n  //               </Box>\n  //             </Box>\n  //           </Box>\n  //         </Box>\n  //       );\n  //     })}\n  //   </Flex>\n  // );\n  //BOX ----> DIV\n\n  return __jsx(Flex, {\n    flexWrap: \"wrap\",\n    justifyContent: \"center\"\n  }, data.map((res, index) => {\n    const {\n      job_position,\n      company,\n      location,\n      url\n    } = res;\n    return __jsx(Box, {\n      m: 3,\n      borderWidth: \"1px\",\n      bg: \"white\",\n      flex: \"0 1 24%\",\n      p: 6,\n      rounded: \"lg\"\n    }, __jsx(Box, null, __jsx(Box, {\n      color: \"gray.500\",\n      fontWeight: \"semibold\",\n      letterSpacing: \"wide\",\n      textTransform: \"uppercase\",\n      fontSize: \"xs\",\n      textAlign: \"center\"\n    }, company)), __jsx(Box, {\n      mt: \"2\",\n      fontWeight: \"semibold\",\n      fontSize: \"md\",\n      textAlign: \"center\"\n    }, job_position), __jsx(Box, {\n      mt: \"2\",\n      color: \"gray.600\",\n      fontSize: \"sm\",\n      textAlign: \"center\"\n    }, location));\n  }));\n} // const SampleLayout = ({ children, title }) => {\n//   return (\n//     <div className=\"centered\">\n//       <h1>{title}</h1>\n//       <section className=\"card\">{children}</section>\n//     </div>\n//   );\n// };\n// const jobPage = ({ result }) => {\n//   if (!result) {\n//     // return <ErrorPage statusCode={404}></ErrorPage>;\n//     console.log(\"Data not found\");\n//   }\n//   // return result.data.entry_level.map((res, index) => {\n//   //   const { Job_Position, Job_Company_Name, Job_Location, Job_url } = res;\n//   //   return (\n//   //     <ArticleLayout uniqueKey={index}>\n//   //       <h1>{Job_Position}</h1>\n//   //       <h2>{Job_Company_Name}</h2>\n//   //       <h2>{Job_Location}</h2>\n//   //     </ArticleLayout>\n//   //   );\n//   // });\n//   return (\n//     <SampleLayout>\n//       {result.data.entry_level.map((res, index) => {\n//         const { Job_Position, Job_Company_Name, Job_Location, Job_url } = res;\n//         <ArticleLayout uniqueKey={index}>\n//           <h1>{Job_Position}</h1>\n//           <h2>{Job_Company_Name}</h2>\n//           <h2>{Job_Location}</h2>\n//         </ArticleLayout>;\n//       })}\n//     </SampleLayout>\n//   );\n// };\n// export async function getServerSideProps({ req }) {\n//   try {\n//     const baseUrl = req ? `${req.protocol}://${req.get(\"Host\")}` : \"\";\n//     const res = await fetch(`${baseUrl}/api/jobPosition`);\n//     const result = await res.json();\n//     return {\n//       props: { result },\n//     };\n//   } catch {\n//     res.statusCode = 404;\n//     return {\n//       props: {},\n//     };\n//   }\n// }\n// export default jobPage;","map":{"version":3,"sources":["C:/Users/chris/Desktop/jobaho/pages/jobSection.js"],"names":["React","Component","useSWR","JobCardsLayout","ArticleLayout","fetch","ErrorPage","Box","Flex","fetcher","url","res","data","json","status","Error","message","FetchData","error","console","log","map","index","job_position","company","location"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\r\nimport useSWR from \"swr\";\r\nimport JobCardsLayout from \"../components/JobsectionCards\";\r\nimport ArticleLayout from \"../components/ArticleLayout\";\r\nimport fetch from \"isomorphic-unfetch\";\r\nimport ErrorPage from \"next/error\";\r\nimport { Box, Flex } from \"@chakra-ui/core\";\r\n\r\nconst fetcher = async (url) => {\r\n  const res = await fetch(url);\r\n  const data = await res.json();\r\n\r\n  if (res.status !== 200) {\r\n    throw new Error(\"error\", data.message);\r\n  }\r\n  return data;\r\n};\r\n\r\nexport default function FetchData() {\r\n  const { data, error } = useSWR(\"/api/job/index\", fetcher);\r\n  console.log(\"Data:\", data);\r\n\r\n  if (error) return <div>Failed to load entry level api</div>;\r\n  if (!data) return <div>Loading...</div>;\r\n\r\n  // return (\r\n  //   <Flex flexWrap=\"wrap\" alignItems=\"stretch\">\r\n  //     {data.map((res, index) => {\r\n  //       const { job_position, company, location, url } = res;\r\n  //       return (\r\n  //         <Box maxW=\"md\" m={5} borderWidth=\"1px\" rounded=\"lg\" bg=\"white\">\r\n  //           <Box p=\"8\">\r\n  //             <Box d=\"flex\" alignItems=\"baseline\">\r\n  //               <Box\r\n  //                 color=\"gray.500\"\r\n  //                 fontWeight=\"semibold\"\r\n  //                 letterSpacing=\"wide\"\r\n  //                 fontSize=\"xs\"\r\n  //                 textTransform=\"uppercase\"\r\n  //                 flexWrap=\"wrap\"\r\n  //               >\r\n  //                 {company}\r\n  //               </Box>\r\n  //             </Box>\r\n\r\n  //             <Box d=\"flex\" alignItems=\"baseline\">\r\n  //               <Box\r\n  //                 flexWrap=\"wrap\"\r\n  //                 mt=\"1\"\r\n  //                 fontWeight=\"semibold\"\r\n  //                 as=\"h4\"\r\n  //                 lineHeight=\"tight\"\r\n  //               >\r\n  //                 {job_position}\r\n  //               </Box>\r\n  //             </Box>\r\n\r\n  //             <Box d=\"flex\" mt=\"2\" alignItems=\"center\">\r\n  //               <Box as=\"span\" color=\"gray.600\" fontSize=\"sm\">\r\n  //                 {location}\r\n  //               </Box>\r\n  //             </Box>\r\n  //           </Box>\r\n  //         </Box>\r\n  //       );\r\n  //     })}\r\n  //   </Flex>\r\n  // );\r\n\r\n  //BOX ----> DIV\r\n  return (\r\n    <Flex flexWrap=\"wrap\" justifyContent=\"center\">\r\n      {data.map((res, index) => {\r\n        const { job_position, company, location, url } = res;\r\n        return (\r\n          <Box\r\n            m={3}\r\n            borderWidth=\"1px\"\r\n            bg=\"white\"\r\n            flex=\"0 1 24%\"\r\n            p={6}\r\n            rounded=\"lg\"\r\n          >\r\n            <Box>\r\n              <Box\r\n                color=\"gray.500\"\r\n                fontWeight=\"semibold\"\r\n                letterSpacing=\"wide\"\r\n                textTransform=\"uppercase\"\r\n                fontSize=\"xs\"\r\n                textAlign=\"center\"\r\n              >\r\n                {company}\r\n              </Box>\r\n            </Box>\r\n            <Box mt=\"2\" fontWeight=\"semibold\" fontSize=\"md\" textAlign=\"center\">\r\n              {job_position}\r\n            </Box>\r\n            <Box mt=\"2\" color=\"gray.600\" fontSize=\"sm\" textAlign=\"center\">\r\n              {location}\r\n            </Box>\r\n          </Box>\r\n        );\r\n      })}\r\n    </Flex>\r\n  );\r\n}\r\n\r\n// const SampleLayout = ({ children, title }) => {\r\n//   return (\r\n//     <div className=\"centered\">\r\n//       <h1>{title}</h1>\r\n//       <section className=\"card\">{children}</section>\r\n//     </div>\r\n//   );\r\n// };\r\n\r\n// const jobPage = ({ result }) => {\r\n//   if (!result) {\r\n//     // return <ErrorPage statusCode={404}></ErrorPage>;\r\n//     console.log(\"Data not found\");\r\n//   }\r\n\r\n//   // return result.data.entry_level.map((res, index) => {\r\n//   //   const { Job_Position, Job_Company_Name, Job_Location, Job_url } = res;\r\n//   //   return (\r\n//   //     <ArticleLayout uniqueKey={index}>\r\n//   //       <h1>{Job_Position}</h1>\r\n//   //       <h2>{Job_Company_Name}</h2>\r\n//   //       <h2>{Job_Location}</h2>\r\n//   //     </ArticleLayout>\r\n//   //   );\r\n//   // });\r\n\r\n//   return (\r\n//     <SampleLayout>\r\n//       {result.data.entry_level.map((res, index) => {\r\n//         const { Job_Position, Job_Company_Name, Job_Location, Job_url } = res;\r\n//         <ArticleLayout uniqueKey={index}>\r\n//           <h1>{Job_Position}</h1>\r\n//           <h2>{Job_Company_Name}</h2>\r\n//           <h2>{Job_Location}</h2>\r\n//         </ArticleLayout>;\r\n//       })}\r\n//     </SampleLayout>\r\n//   );\r\n// };\r\n\r\n// export async function getServerSideProps({ req }) {\r\n//   try {\r\n//     const baseUrl = req ? `${req.protocol}://${req.get(\"Host\")}` : \"\";\r\n//     const res = await fetch(`${baseUrl}/api/jobPosition`);\r\n//     const result = await res.json();\r\n\r\n//     return {\r\n//       props: { result },\r\n//     };\r\n//   } catch {\r\n//     res.statusCode = 404;\r\n//     return {\r\n//       props: {},\r\n//     };\r\n//   }\r\n// }\r\n\r\n// export default jobPage;\r\n"]},"metadata":{},"sourceType":"module"}