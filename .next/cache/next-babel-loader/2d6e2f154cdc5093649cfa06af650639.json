{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\chris\\\\Desktop\\\\Jobaho\\\\pages\\\\junior.js\";\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport useSWR from \"swr\";\nimport JobCardsLayout from \"../components/JobsectionCards\";\nimport fetch from \"isomorphic-unfetch\";\nimport { Box, Flex, Link, Text, Button, ButtonGroup } from \"@chakra-ui/core\";\n\nconst fetcher = async url => {\n  const res = await fetch(url);\n  const data = await res.json();\n\n  if (res.status !== 200) {\n    throw new Error(\"error\", data.message);\n  }\n\n  return data;\n};\n\nexport default function FetchData() {\n  const {\n    data,\n    error\n  } = useSWR(\"/api/juniorAPI\", fetcher); // console.log(\"Data:\", data);\n\n  if (error) return __jsx(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 21\n    }\n  }, \"Failed to load entry level api\");\n  if (!data) return __jsx(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 21\n    }\n  }, \"Loading...\"); //BOX ----> DIV\n\n  return __jsx(JobCardsLayout, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 5\n    }\n  }, __jsx(Box, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 7\n    }\n  }, __jsx(Text, {\n    textAlign: \"left\",\n    m: 5,\n    fontSize: \"25px\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 9\n    }\n  }, \"Back\"), __jsx(Text, {\n    color: \"white\",\n    m: 5,\n    textAlign: \"center\",\n    fontSize: \"30px\",\n    fontFamily: \"Sen\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 9\n    }\n  }, \"Junior / Entry Level Jobs\"), __jsx(Text, {\n    color: \"white\",\n    m: 5,\n    textAlign: \"center\",\n    fontSize: \"20px\",\n    fontFamily: \"Sen\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 9\n    }\n  }, \"Number of Jobs: \", data.length), __jsx(Flex, {\n    flexWrap: \"wrap\",\n    justifyContent: \"center\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 9\n    }\n  }, data.entry_level.map((res, index) => {\n    const {\n      Job_Position,\n      Job_Company_Name,\n      Job_Location,\n      Job_url\n    } = res;\n    return __jsx(Box, {\n      m: 3,\n      borderWidth: \"1px\",\n      bg: \"white\",\n      flex: \"0 1 24%\",\n      p: 6,\n      rounded: \"lg\",\n      mt: 5,\n      key: index,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 15\n      }\n    }, __jsx(Box, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 17\n      }\n    }, __jsx(Box, {\n      color: \"gray.500\",\n      fontWeight: \"semibold\",\n      letterSpacing: \"wide\",\n      textTransform: \"uppercase\",\n      fontSize: \"xs\",\n      textAlign: \"center\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 19\n      }\n    }, Job_Company_Name)), __jsx(Box, {\n      mt: \"2\",\n      fontWeight: \"semibold\",\n      fontSize: \"lg\",\n      textAlign: \"center\",\n      color: \"blue.600\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 17\n      }\n    }, __jsx(Link, {\n      href: Job_url,\n      isExternal: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 19\n      }\n    }, Job_Position)), __jsx(Box, {\n      mt: \"2\",\n      color: \"gray.600\",\n      fontSize: \"sm\",\n      textAlign: \"center\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 17\n      }\n    }, Job_Location));\n  }))));\n}","map":{"version":3,"sources":["C:/Users/chris/Desktop/Jobaho/pages/junior.js"],"names":["useSWR","JobCardsLayout","fetch","Box","Flex","Link","Text","Button","ButtonGroup","fetcher","url","res","data","json","status","Error","message","FetchData","error","length","entry_level","map","index","Job_Position","Job_Company_Name","Job_Location","Job_url"],"mappings":"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","sourcesContent":["import useSWR from \"swr\";\r\nimport JobCardsLayout from \"../components/JobsectionCards\";\r\nimport fetch from \"isomorphic-unfetch\";\r\n\r\nimport { Box, Flex, Link, Text, Button, ButtonGroup } from \"@chakra-ui/core\";\r\n\r\nconst fetcher = async (url) => {\r\n  const res = await fetch(url);\r\n  const data = await res.json();\r\n\r\n  if (res.status !== 200) {\r\n    throw new Error(\"error\", data.message);\r\n  }\r\n  return data;\r\n};\r\n\r\nexport default function FetchData() {\r\n  const { data, error } = useSWR(\"/api/juniorAPI\", fetcher);\r\n  // console.log(\"Data:\", data);\r\n\r\n  if (error) return <div>Failed to load entry level api</div>;\r\n  if (!data) return <div>Loading...</div>;\r\n\r\n  //BOX ----> DIV\r\n  return (\r\n    <JobCardsLayout>\r\n      <Box>\r\n        <Text textAlign=\"left\" m={5} fontSize=\"25px\">\r\n          Back\r\n        </Text>\r\n        <Text\r\n          color=\"white\"\r\n          m={5}\r\n          textAlign=\"center\"\r\n          fontSize=\"30px\"\r\n          fontFamily=\"Sen\"\r\n        >\r\n          Junior / Entry Level Jobs\r\n        </Text>\r\n        <Text\r\n          color=\"white\"\r\n          m={5}\r\n          textAlign=\"center\"\r\n          fontSize=\"20px\"\r\n          fontFamily=\"Sen\"\r\n        >\r\n          Number of Jobs: {data.length}\r\n        </Text>\r\n        <Flex flexWrap=\"wrap\" justifyContent=\"center\">\r\n          {data.entry_level.map((res, index) => {\r\n            const {\r\n              Job_Position,\r\n              Job_Company_Name,\r\n              Job_Location,\r\n              Job_url,\r\n            } = res;\r\n            return (\r\n              <Box\r\n                m={3}\r\n                borderWidth=\"1px\"\r\n                bg=\"white\"\r\n                flex=\"0 1 24%\"\r\n                p={6}\r\n                rounded=\"lg\"\r\n                mt={5}\r\n                key={index}\r\n              >\r\n                <Box>\r\n                  <Box\r\n                    color=\"gray.500\"\r\n                    fontWeight=\"semibold\"\r\n                    letterSpacing=\"wide\"\r\n                    textTransform=\"uppercase\"\r\n                    fontSize=\"xs\"\r\n                    textAlign=\"center\"\r\n                  >\r\n                    {Job_Company_Name}\r\n                  </Box>\r\n                </Box>\r\n                <Box\r\n                  mt=\"2\"\r\n                  fontWeight=\"semibold\"\r\n                  fontSize=\"lg\"\r\n                  textAlign=\"center\"\r\n                  color=\"blue.600\"\r\n                >\r\n                  <Link href={Job_url} isExternal>\r\n                    {Job_Position}\r\n                  </Link>\r\n                </Box>\r\n                <Box mt=\"2\" color=\"gray.600\" fontSize=\"sm\" textAlign=\"center\">\r\n                  {Job_Location}\r\n                </Box>\r\n              </Box>\r\n            );\r\n          })}\r\n        </Flex>\r\n      </Box>\r\n    </JobCardsLayout>\r\n  );\r\n}\r\n"]},"metadata":{},"sourceType":"module"}