{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime-corejs2/regenerator\";\nimport _classCallCheck from \"@babel/runtime-corejs2/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime-corejs2/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"@babel/runtime-corejs2/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime-corejs2/helpers/esm/getPrototypeOf\";\nimport _inherits from \"@babel/runtime-corejs2/helpers/esm/inherits\";\nvar __jsx = React.createElement;\n// import fetch from \"isomorphic-unfetch\";\n// function test({ testData }) {\n//   return <div>SAMPLE DATA FROM nNode: {testData}</div>;\n// }\n// test.getInitialProps = async ctx => {\n//   const res = await fetch(\"http://localhost:3000/testNode\");\n//   const json = await res.json();\n//   return { testData: json.data };\n// };\n// export default test;\nimport React, { Component } from \"react\";\nimport fetch from \"isomorphic-unfetch\";\n\nvar _default = /*#__PURE__*/function (_Component) {\n  _inherits(_default, _Component);\n\n  function _default() {\n    _classCallCheck(this, _default);\n\n    return _possibleConstructorReturn(this, _getPrototypeOf(_default).apply(this, arguments));\n  }\n\n  _createClass(_default, [{\n    key: \"render\",\n    value: function render() {\n      return __jsx(\"h1\", null, \"Hello: \", this.props.data);\n    }\n  }], [{\n    key: \"getInitialProps\",\n    value: function getInitialProps(_ref) {\n      var req, res, data;\n      return _regeneratorRuntime.async(function getInitialProps$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              req = _ref.req;\n              _context.next = 3;\n              return _regeneratorRuntime.awrap(fetch(\"http://localhost:3000/endpoint\"));\n\n            case 3:\n              res = _context.sent;\n              _context.next = 6;\n              return _regeneratorRuntime.awrap(res.json());\n\n            case 6:\n              data = _context.sent;\n              return _context.abrupt(\"return\", {\n                data: data\n              });\n\n            case 8:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      });\n    }\n  }]);\n\n  return _default;\n}(Component); // import React, { Component } from \"react\";\n// import axios from \"axios\";\n// class TestingPage extends Component {\n//   constructor(props) {\n//     super(props);\n//     this.state = {\n//       data: []\n//     };\n//   }\n//   fetchData() {\n//     axios\n//       .get(\"/api/test\")\n//       .then(data => data.json())\n//       .then(res => this.setState({ data: res.data }))\n//       .catch(err => console.log(\"error\", err));\n//   }\n//   renderData() {\n//     const { data } = this.state;\n//     return <h1>{data}</h1>;\n//   }\n//   render() {\n//     return (\n//       <div>\n//         <h1>TEST ONLY</h1>\n//         {this.renderData()}\n//       </div>\n//     );\n//   }\n// }\n// export default TestingPage;\n\n\nexport { _default as default };","map":{"version":3,"sources":["C:/Users/chris/Desktop/jobaho/pages/testing.js"],"names":["React","Component","fetch","props","data","req","res","json"],"mappings":";;;;;;;AAAA;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,KAAP,MAAkB,oBAAlB;;;;;;;;;;;;;6BAUW;AACP,aAAO,6BAAY,KAAKC,KAAL,CAAWC,IAAvB,CAAP;AACD;;;;;;;;;AAT8BC,cAAAA,G,QAAAA,G;;+CAEXH,KAAK,CAAC,gCAAD,C;;;AAAjBI,cAAAA,G;;+CACaA,GAAG,CAACC,IAAJ,E;;;AAAbH,cAAAA,I;+CACC;AAAEA,gBAAAA,IAAI,EAAJA;AAAF,e;;;;;;;;;;;;EALkBH,S,GAa7B;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA","sourcesContent":["// import fetch from \"isomorphic-unfetch\";\r\n\r\n// function test({ testData }) {\r\n//   return <div>SAMPLE DATA FROM nNode: {testData}</div>;\r\n// }\r\n\r\n// test.getInitialProps = async ctx => {\r\n//   const res = await fetch(\"http://localhost:3000/testNode\");\r\n//   const json = await res.json();\r\n//   return { testData: json.data };\r\n// };\r\n\r\n// export default test;\r\nimport React, { Component } from \"react\";\r\nimport fetch from \"isomorphic-unfetch\";\r\n\r\nexport default class extends Component {\r\n  static async getInitialProps({ req }) {\r\n    // const baseUrl = req ? `${req.protocol}://${req.get(\"Host\")}` : \"\";\r\n    const res = await fetch(\"http://localhost:3000/endpoint\");\r\n    const data = await res.json();\r\n    return { data };\r\n  }\r\n\r\n  render() {\r\n    return <h1>Hello: {this.props.data}</h1>;\r\n  }\r\n}\r\n\r\n// import React, { Component } from \"react\";\r\n// import axios from \"axios\";\r\n\r\n// class TestingPage extends Component {\r\n//   constructor(props) {\r\n//     super(props);\r\n//     this.state = {\r\n//       data: []\r\n//     };\r\n//   }\r\n\r\n//   fetchData() {\r\n//     axios\r\n//       .get(\"/api/test\")\r\n//       .then(data => data.json())\r\n//       .then(res => this.setState({ data: res.data }))\r\n//       .catch(err => console.log(\"error\", err));\r\n//   }\r\n\r\n//   renderData() {\r\n//     const { data } = this.state;\r\n//     return <h1>{data}</h1>;\r\n//   }\r\n\r\n//   render() {\r\n//     return (\r\n//       <div>\r\n//         <h1>TEST ONLY</h1>\r\n//         {this.renderData()}\r\n//       </div>\r\n//     );\r\n//   }\r\n// }\r\n\r\n// export default TestingPage;\r\n"]},"metadata":{},"sourceType":"module"}