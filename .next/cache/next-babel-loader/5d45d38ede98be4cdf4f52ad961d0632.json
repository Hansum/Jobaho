{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nvar __jsx = React.createElement;\nimport React, { Component } from \"react\";\nimport { useRouter } from \"next/router\";\nimport useSWR from \"swr\";\nimport JobCardsLayout from \"../components/JobsectionCards\";\nimport fetch from \"isomorphic-unfetch\";\nimport ErrorPage from \"next/error\";\nimport { Box, Flex, Link, Text, Button, ButtonGroup } from \"@chakra-ui/core\";\n\nvar fetcher = function fetcher(url) {\n  var res, data;\n  return _regeneratorRuntime.async(function fetcher$(_context) {\n    while (1) {\n      switch (_context.prev = _context.next) {\n        case 0:\n          _context.next = 2;\n          return _regeneratorRuntime.awrap(fetch(url));\n\n        case 2:\n          res = _context.sent;\n          _context.next = 5;\n          return _regeneratorRuntime.awrap(res.json());\n\n        case 5:\n          data = _context.sent;\n\n          if (!(res.status !== 200)) {\n            _context.next = 8;\n            break;\n          }\n\n          throw new Error(\"error\", data.message);\n\n        case 8:\n          return _context.abrupt(\"return\", data);\n\n        case 9:\n        case \"end\":\n          return _context.stop();\n      }\n    }\n  }, null, null, null, Promise);\n};\n\nexport default function FetchData() {\n  var _useSWR = useSWR(\"/api/juniorAPI\", fetcher),\n      data = _useSWR.data,\n      error = _useSWR.error; // console.log(\"Data:\", data);\n\n\n  if (error) return __jsx(\"div\", null, \"Failed to load entry level api\");\n  if (!data) return __jsx(\"div\", null, \"Loading...\"); //BOX ----> DIV\n  // return (\n  //   <Flex flexWrap=\"wrap\" justifyContent=\"center\">\n  //     {data.map((res, index) => {\n  //       const { job_position, company, location, url } = res;\n  //       return (\n  //         <Box\n  //           m={3}\n  //           borderWidth=\"1px\"\n  //           bg=\"white\"\n  //           flex=\"0 1 24%\"\n  //           p={6}\n  //           rounded=\"lg\"\n  //           key={index}\n  //         >\n  //           <Box>\n  //             <Box\n  //               color=\"gray.500\"\n  //               fontWeight=\"semibold\"\n  //               letterSpacing=\"wide\"\n  //               textTransform=\"uppercase\"\n  //               fontSize=\"xs\"\n  //               textAlign=\"center\"\n  //             >\n  //               {company}\n  //             </Box>\n  //           </Box>\n  //           <Box\n  //             mt=\"2\"\n  //             fontWeight=\"semibold\"\n  //             fontSize=\"lg\"\n  //             textAlign=\"center\"\n  //             color=\"blue.600\"\n  //           >\n  //             <Link href={url} isExternal>\n  //               {job_position}\n  //             </Link>\n  //           </Box>\n  //           <Box mt=\"2\" color=\"gray.600\" fontSize=\"sm\" textAlign=\"center\">\n  //             {location}\n  //           </Box>\n  //         </Box>\n  //       );\n  //     })}\n  //   </Flex>\n  // );\n\n  return __jsx(JobCardsLayout, null, __jsx(Box, null, __jsx(Text, {\n    color: \"white\",\n    m: 5,\n    textAlign: \"center\",\n    fontSize: \"30px\",\n    fontFamily: \"Sen\"\n  }, \"Junior / Entry Level Jobs\"), __jsx(Flex, {\n    flexWrap: \"wrap\",\n    justifyContent: \"center\"\n  }, data.entry_level.map(function (res, index) {\n    var Job_Position = res.Job_Position,\n        Job_Company_Name = res.Job_Company_Name,\n        Job_Location = res.Job_Location,\n        Job_url = res.Job_url;\n    return __jsx(Box, {\n      m: 3,\n      borderWidth: \"1px\",\n      bg: \"white\",\n      flex: \"0 1 24%\",\n      p: 6,\n      rounded: \"lg\",\n      mt: 5,\n      key: index\n    }, __jsx(Box, null, __jsx(Box, {\n      color: \"gray.500\",\n      fontWeight: \"semibold\",\n      letterSpacing: \"wide\",\n      textTransform: \"uppercase\",\n      fontSize: \"xs\",\n      textAlign: \"center\"\n    }, Job_Company_Name)), __jsx(Box, {\n      mt: \"2\",\n      fontWeight: \"semibold\",\n      fontSize: \"lg\",\n      textAlign: \"center\",\n      color: \"blue.600\"\n    }, __jsx(Link, {\n      href: Job_url,\n      isExternal: true\n    }, Job_Position)), __jsx(Box, {\n      mt: \"2\",\n      color: \"gray.600\",\n      fontSize: \"sm\",\n      textAlign: \"center\"\n    }, Job_Location));\n  }))));\n} // const jobPage = ({ result }) => {\n//   const router = useRouter();\n//   if (!result) {\n//     // return <ErrorPage statusCode={404}></ErrorPage>;\n//     console.log(\"Data not found\");\n//   }\n//   return (\n//     <JobCardsLayout>\n//       <Box>\n//         <Text\n//           color=\"white\"\n//           m={5}\n//           textAlign=\"center\"\n//           fontSize=\"30px\"\n//           fontFamily=\"Sen\"\n//         >\n//           Junior / Entry Level Jobs\n//         </Text>\n//         <Flex flexWrap=\"wrap\" justifyContent=\"center\">\n//           {result.data.entry_level.map((res, index) => {\n//             const {\n//               Job_Position,\n//               Job_Company_Name,\n//               Job_Location,\n//               Job_url,\n//             } = res;\n//             return (\n//               <Box\n//                 m={3}\n//                 borderWidth=\"1px\"\n//                 bg=\"white\"\n//                 flex=\"0 1 24%\"\n//                 p={6}\n//                 rounded=\"lg\"\n//                 mt={5}\n//                 key={index}\n//               >\n//                 <Box>\n//                   <Box\n//                     color=\"gray.500\"\n//                     fontWeight=\"semibold\"\n//                     letterSpacing=\"wide\"\n//                     textTransform=\"uppercase\"\n//                     fontSize=\"xs\"\n//                     textAlign=\"center\"\n//                   >\n//                     {Job_Company_Name}\n//                   </Box>\n//                 </Box>\n//                 <Box\n//                   mt=\"2\"\n//                   fontWeight=\"semibold\"\n//                   fontSize=\"lg\"\n//                   textAlign=\"center\"\n//                   color=\"blue.600\"\n//                 >\n//                   <Link href={Job_url} isExternal>\n//                     {Job_Position}\n//                   </Link>\n//                 </Box>\n//                 <Box mt=\"2\" color=\"gray.600\" fontSize=\"sm\" textAlign=\"center\">\n//                   {Job_Location}\n//                 </Box>\n//               </Box>\n//             );\n//           })}\n//         </Flex>\n//       </Box>\n//     </JobCardsLayout>\n//   );\n// };\n// export async function getServerSideProps({ req }) {\n//   try {\n//     const baseUrl = req ? `${req.protocol}://${req.get(\"Host\")}` : \"\";\n//     const res = await fetch(`${baseUrl}/api/JuniorPosition`);\n//     const result = await res.json();\n//     return {\n//       props: { result },\n//     };\n//   } catch {\n//     res.statusCode = 404;\n//     return {\n//       props: {},\n//     };\n//   }\n// }\n// export default jobPage;","map":{"version":3,"sources":["C:/Users/chris/Desktop/jobaho/pages/junior.js"],"names":["React","Component","useRouter","useSWR","JobCardsLayout","fetch","ErrorPage","Box","Flex","Link","Text","Button","ButtonGroup","fetcher","url","res","json","data","status","Error","message","FetchData","error","entry_level","map","index","Job_Position","Job_Company_Name","Job_Location","Job_url"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\r\nimport { useRouter } from \"next/router\";\r\nimport useSWR from \"swr\";\r\nimport JobCardsLayout from \"../components/JobsectionCards\";\r\nimport fetch from \"isomorphic-unfetch\";\r\nimport ErrorPage from \"next/error\";\r\nimport { Box, Flex, Link, Text, Button, ButtonGroup } from \"@chakra-ui/core\";\r\n\r\nconst fetcher = async (url) => {\r\n  const res = await fetch(url);\r\n  const data = await res.json();\r\n\r\n  if (res.status !== 200) {\r\n    throw new Error(\"error\", data.message);\r\n  }\r\n  return data;\r\n};\r\n\r\nexport default function FetchData() {\r\n  const { data, error } = useSWR(\"/api/juniorAPI\", fetcher);\r\n  // console.log(\"Data:\", data);\r\n\r\n  if (error) return <div>Failed to load entry level api</div>;\r\n  if (!data) return <div>Loading...</div>;\r\n\r\n  //BOX ----> DIV\r\n  // return (\r\n  //   <Flex flexWrap=\"wrap\" justifyContent=\"center\">\r\n  //     {data.map((res, index) => {\r\n  //       const { job_position, company, location, url } = res;\r\n  //       return (\r\n  //         <Box\r\n  //           m={3}\r\n  //           borderWidth=\"1px\"\r\n  //           bg=\"white\"\r\n  //           flex=\"0 1 24%\"\r\n  //           p={6}\r\n  //           rounded=\"lg\"\r\n  //           key={index}\r\n  //         >\r\n  //           <Box>\r\n  //             <Box\r\n  //               color=\"gray.500\"\r\n  //               fontWeight=\"semibold\"\r\n  //               letterSpacing=\"wide\"\r\n  //               textTransform=\"uppercase\"\r\n  //               fontSize=\"xs\"\r\n  //               textAlign=\"center\"\r\n  //             >\r\n  //               {company}\r\n  //             </Box>\r\n  //           </Box>\r\n  //           <Box\r\n  //             mt=\"2\"\r\n  //             fontWeight=\"semibold\"\r\n  //             fontSize=\"lg\"\r\n  //             textAlign=\"center\"\r\n  //             color=\"blue.600\"\r\n  //           >\r\n  //             <Link href={url} isExternal>\r\n  //               {job_position}\r\n  //             </Link>\r\n  //           </Box>\r\n  //           <Box mt=\"2\" color=\"gray.600\" fontSize=\"sm\" textAlign=\"center\">\r\n  //             {location}\r\n  //           </Box>\r\n  //         </Box>\r\n  //       );\r\n  //     })}\r\n  //   </Flex>\r\n  // );\r\n\r\n  return (\r\n    <JobCardsLayout>\r\n      <Box>\r\n        <Text\r\n          color=\"white\"\r\n          m={5}\r\n          textAlign=\"center\"\r\n          fontSize=\"30px\"\r\n          fontFamily=\"Sen\"\r\n        >\r\n          Junior / Entry Level Jobs\r\n        </Text>\r\n        <Flex flexWrap=\"wrap\" justifyContent=\"center\">\r\n          {data.entry_level.map((res, index) => {\r\n            const {\r\n              Job_Position,\r\n              Job_Company_Name,\r\n              Job_Location,\r\n              Job_url,\r\n            } = res;\r\n            return (\r\n              <Box\r\n                m={3}\r\n                borderWidth=\"1px\"\r\n                bg=\"white\"\r\n                flex=\"0 1 24%\"\r\n                p={6}\r\n                rounded=\"lg\"\r\n                mt={5}\r\n                key={index}\r\n              >\r\n                <Box>\r\n                  <Box\r\n                    color=\"gray.500\"\r\n                    fontWeight=\"semibold\"\r\n                    letterSpacing=\"wide\"\r\n                    textTransform=\"uppercase\"\r\n                    fontSize=\"xs\"\r\n                    textAlign=\"center\"\r\n                  >\r\n                    {Job_Company_Name}\r\n                  </Box>\r\n                </Box>\r\n                <Box\r\n                  mt=\"2\"\r\n                  fontWeight=\"semibold\"\r\n                  fontSize=\"lg\"\r\n                  textAlign=\"center\"\r\n                  color=\"blue.600\"\r\n                >\r\n                  <Link href={Job_url} isExternal>\r\n                    {Job_Position}\r\n                  </Link>\r\n                </Box>\r\n                <Box mt=\"2\" color=\"gray.600\" fontSize=\"sm\" textAlign=\"center\">\r\n                  {Job_Location}\r\n                </Box>\r\n              </Box>\r\n            );\r\n          })}\r\n        </Flex>\r\n      </Box>\r\n    </JobCardsLayout>\r\n  );\r\n}\r\n\r\n// const jobPage = ({ result }) => {\r\n//   const router = useRouter();\r\n\r\n//   if (!result) {\r\n//     // return <ErrorPage statusCode={404}></ErrorPage>;\r\n//     console.log(\"Data not found\");\r\n//   }\r\n\r\n//   return (\r\n//     <JobCardsLayout>\r\n//       <Box>\r\n//         <Text\r\n//           color=\"white\"\r\n//           m={5}\r\n//           textAlign=\"center\"\r\n//           fontSize=\"30px\"\r\n//           fontFamily=\"Sen\"\r\n//         >\r\n//           Junior / Entry Level Jobs\r\n//         </Text>\r\n//         <Flex flexWrap=\"wrap\" justifyContent=\"center\">\r\n//           {result.data.entry_level.map((res, index) => {\r\n//             const {\r\n//               Job_Position,\r\n//               Job_Company_Name,\r\n//               Job_Location,\r\n//               Job_url,\r\n//             } = res;\r\n//             return (\r\n//               <Box\r\n//                 m={3}\r\n//                 borderWidth=\"1px\"\r\n//                 bg=\"white\"\r\n//                 flex=\"0 1 24%\"\r\n//                 p={6}\r\n//                 rounded=\"lg\"\r\n//                 mt={5}\r\n//                 key={index}\r\n//               >\r\n//                 <Box>\r\n//                   <Box\r\n//                     color=\"gray.500\"\r\n//                     fontWeight=\"semibold\"\r\n//                     letterSpacing=\"wide\"\r\n//                     textTransform=\"uppercase\"\r\n//                     fontSize=\"xs\"\r\n//                     textAlign=\"center\"\r\n//                   >\r\n//                     {Job_Company_Name}\r\n//                   </Box>\r\n//                 </Box>\r\n//                 <Box\r\n//                   mt=\"2\"\r\n//                   fontWeight=\"semibold\"\r\n//                   fontSize=\"lg\"\r\n//                   textAlign=\"center\"\r\n//                   color=\"blue.600\"\r\n//                 >\r\n//                   <Link href={Job_url} isExternal>\r\n//                     {Job_Position}\r\n//                   </Link>\r\n//                 </Box>\r\n//                 <Box mt=\"2\" color=\"gray.600\" fontSize=\"sm\" textAlign=\"center\">\r\n//                   {Job_Location}\r\n//                 </Box>\r\n//               </Box>\r\n//             );\r\n//           })}\r\n//         </Flex>\r\n//       </Box>\r\n//     </JobCardsLayout>\r\n//   );\r\n// };\r\n\r\n// export async function getServerSideProps({ req }) {\r\n//   try {\r\n//     const baseUrl = req ? `${req.protocol}://${req.get(\"Host\")}` : \"\";\r\n//     const res = await fetch(`${baseUrl}/api/JuniorPosition`);\r\n//     const result = await res.json();\r\n\r\n//     return {\r\n//       props: { result },\r\n//     };\r\n//   } catch {\r\n//     res.statusCode = 404;\r\n//     return {\r\n//       props: {},\r\n//     };\r\n//   }\r\n// }\r\n\r\n// export default jobPage;\r\n"]},"metadata":{},"sourceType":"module"}