{"ast":null,"code":"var __jsx = React.createElement;\nimport React, { Component } from \"react\";\nimport fetch from \"isomorphic-unfetch\";\nimport useSWR from \"swr\"; // import \"../node_modules/bulma/css/bulma.css\";\n\nexport default class extends Component {\n  constructor(props) {\n    super(props);\n  }\n\n  static async getInitialProps({\n    req\n  }) {\n    const baseUrl = req ? `${req.protocol}://${req.get(\"Host\")}` : \"\";\n    const res = await fetch(`${baseUrl}/api/jobPosition`);\n    const data = await res.json();\n    return {\n      positionResult: data.data\n    };\n  }\n\n  jobData() {\n    const fetcher = url => fetch(url).then(res => res.json);\n\n    const {\n      data,\n      error\n    } = useSWR(\"/api/entry_level_api\", fetcher);\n    if (error) return __jsx(\"div\", null, \"Failed to load entry level api\");\n    if (!data) return __jsx(\"div\", null, \"Loading...\");\n    return __jsx(\"div\", null, data.map((job, index) => {\n      const {\n        job_position,\n        company,\n        location,\n        url\n      } = data;\n\n      __jsx(\"article\", {\n        className: \"job-card\"\n      }, __jsx(\"h1\", null, job_position), __jsx(\"h1\", null, company), __jsx(\"h1\", null, location), __jsx(\"h1\", null, url));\n    }));\n  }\n\n  jobCards() {\n    return this.props.positionResult.mynimoData.map((res, index) => {\n      const {\n        Job_Position,\n        Job_Company_Name,\n        Job_Location\n      } = res;\n      return __jsx(\"article\", {\n        className: \"job-card\",\n        key: index\n      }, __jsx(\"h1\", null, Job_Position), __jsx(\"h2\", null, Job_Company_Name), __jsx(\"h2\", null, Job_Location));\n    });\n  }\n\n  render() {\n    return __jsx(\"div\", null, __jsx(\"div\", null, __jsx(\"h1\", null, \"job Section\"), __jsx(\"div\", {\n      className: \"centered\"\n    }, __jsx(\"section\", {\n      className: \"cards\"\n    }, this.jobData()))));\n  }\n\n}","map":{"version":3,"sources":["C:/Users/chris/Desktop/jobaho/pages/testing.js"],"names":["React","Component","fetch","useSWR","constructor","props","getInitialProps","req","baseUrl","protocol","get","res","data","json","positionResult","jobData","fetcher","url","then","error","map","job","index","job_position","company","location","jobCards","mynimoData","Job_Position","Job_Company_Name","Job_Location","render"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,KAAP,MAAkB,oBAAlB;AACA,OAAOC,MAAP,MAAmB,KAAnB,C,CACA;;AAEA,eAAe,cAAcF,SAAd,CAAwB;AACrCG,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACjB,UAAMA,KAAN;AACD;;AACD,eAAaC,eAAb,CAA6B;AAAEC,IAAAA;AAAF,GAA7B,EAAsC;AACpC,UAAMC,OAAO,GAAGD,GAAG,GAAI,GAAEA,GAAG,CAACE,QAAS,MAAKF,GAAG,CAACG,GAAJ,CAAQ,MAAR,CAAgB,EAAxC,GAA4C,EAA/D;AACA,UAAMC,GAAG,GAAG,MAAMT,KAAK,CAAE,GAAEM,OAAQ,kBAAZ,CAAvB;AACA,UAAMI,IAAI,GAAG,MAAMD,GAAG,CAACE,IAAJ,EAAnB;AACA,WAAO;AAAEC,MAAAA,cAAc,EAAEF,IAAI,CAACA;AAAvB,KAAP;AACD;;AAEDG,EAAAA,OAAO,GAAG;AACR,UAAMC,OAAO,GAAIC,GAAD,IAASf,KAAK,CAACe,GAAD,CAAL,CAAWC,IAAX,CAAiBP,GAAD,IAASA,GAAG,CAACE,IAA7B,CAAzB;;AACA,UAAM;AAAED,MAAAA,IAAF;AAAQO,MAAAA;AAAR,QAAkBhB,MAAM,CAAC,sBAAD,EAAyBa,OAAzB,CAA9B;AAEA,QAAIG,KAAJ,EAAW,OAAO,oDAAP;AACX,QAAI,CAACP,IAAL,EAAW,OAAO,gCAAP;AAEX,WACE,mBACGA,IAAI,CAACQ,GAAL,CAAS,CAACC,GAAD,EAAMC,KAAN,KAAgB;AACxB,YAAM;AAAEC,QAAAA,YAAF;AAAgBC,QAAAA,OAAhB;AAAyBC,QAAAA,QAAzB;AAAmCR,QAAAA;AAAnC,UAA2CL,IAAjD;;AACA;AAAS,QAAA,SAAS,EAAC;AAAnB,SACE,kBAAKW,YAAL,CADF,EAEE,kBAAKC,OAAL,CAFF,EAGE,kBAAKC,QAAL,CAHF,EAIE,kBAAKR,GAAL,CAJF;AAMD,KARA,CADH,CADF;AAaD;;AAEDS,EAAAA,QAAQ,GAAG;AACT,WAAO,KAAKrB,KAAL,CAAWS,cAAX,CAA0Ba,UAA1B,CAAqCP,GAArC,CAAyC,CAACT,GAAD,EAAMW,KAAN,KAAgB;AAC9D,YAAM;AAAEM,QAAAA,YAAF;AAAgBC,QAAAA,gBAAhB;AAAkCC,QAAAA;AAAlC,UAAmDnB,GAAzD;AACA,aACE;AAAS,QAAA,SAAS,EAAC,UAAnB;AAA8B,QAAA,GAAG,EAAEW;AAAnC,SACE,kBAAKM,YAAL,CADF,EAEE,kBAAKC,gBAAL,CAFF,EAGE,kBAAKC,YAAL,CAHF,CADF;AAOD,KATM,CAAP;AAUD;;AAEDC,EAAAA,MAAM,GAAG;AACP,WACE,mBACE,mBACE,gCADF,EAEE;AAAK,MAAA,SAAS,EAAC;AAAf,OAEE;AAAS,MAAA,SAAS,EAAC;AAAnB,OAA4B,KAAKhB,OAAL,EAA5B,CAFF,CAFF,CADF,CADF;AAWD;;AA1DoC","sourcesContent":["import React, { Component } from \"react\";\r\nimport fetch from \"isomorphic-unfetch\";\r\nimport useSWR from \"swr\";\r\n// import \"../node_modules/bulma/css/bulma.css\";\r\n\r\nexport default class extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n  }\r\n  static async getInitialProps({ req }) {\r\n    const baseUrl = req ? `${req.protocol}://${req.get(\"Host\")}` : \"\";\r\n    const res = await fetch(`${baseUrl}/api/jobPosition`);\r\n    const data = await res.json();\r\n    return { positionResult: data.data };\r\n  }\r\n\r\n  jobData() {\r\n    const fetcher = (url) => fetch(url).then((res) => res.json);\r\n    const { data, error } = useSWR(\"/api/entry_level_api\", fetcher);\r\n\r\n    if (error) return <div>Failed to load entry level api</div>;\r\n    if (!data) return <div>Loading...</div>;\r\n\r\n    return (\r\n      <div>\r\n        {data.map((job, index) => {\r\n          const { job_position, company, location, url } = data;\r\n          <article className=\"job-card\">\r\n            <h1>{job_position}</h1>\r\n            <h1>{company}</h1>\r\n            <h1>{location}</h1>\r\n            <h1>{url}</h1>\r\n          </article>;\r\n        })}\r\n      </div>\r\n    );\r\n  }\r\n\r\n  jobCards() {\r\n    return this.props.positionResult.mynimoData.map((res, index) => {\r\n      const { Job_Position, Job_Company_Name, Job_Location } = res;\r\n      return (\r\n        <article className=\"job-card\" key={index}>\r\n          <h1>{Job_Position}</h1>\r\n          <h2>{Job_Company_Name}</h2>\r\n          <h2>{Job_Location}</h2>\r\n        </article>\r\n      );\r\n    });\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div>\r\n        <div>\r\n          <h1>job Section</h1>\r\n          <div className=\"centered\">\r\n            {/* <section className=\"cards\">{this.jobCards()}</section> */}\r\n            <section className=\"cards\">{this.jobData()}</section>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n"]},"metadata":{},"sourceType":"module"}