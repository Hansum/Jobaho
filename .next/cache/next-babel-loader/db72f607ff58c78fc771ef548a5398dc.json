{"ast":null,"code":"const cheerio = require(\"cheerio\");\n\nconst axios = require(\"axios\");\n\nconst filterJobs = async () => {\n  const arr = await getRemainingData();\n  const keywords = [\"Associate\", \"Entry-level\", \"Junior\", \"Jr\", \"Fresh\", \"Fresh-Graduate\", \"Senior\", \"Sr\"];\n  const arrKeywordsFinal = [];\n\n  if (arr != 0 || arr != undefined) {\n    for (let item of arr) {\n      const exists = keywords.some(res => item.Job_Position.includes(res));\n\n      if (!exists) {\n        arrKeywordsFinal.push(item);\n      }\n    }\n\n    return arrKeywordsFinal;\n  } else {\n    console.log(\"no array found to check Keywords\");\n  }\n};\n\nconst FinalOutput = async () => {\n  const keyData = await filterJobs();\n  const finalData = [];\n\n  if (keyData) {\n    for (let item of keyData) {\n      if (item.Job_Position !== undefined && item.Company_Name !== undefined && item.Job_Date !== undefined && item.Job_url !== undefined) {\n        const jobTitle = item.Job_Position.trim();\n        const company = item.Company_Name.trim();\n        const date = item.Job_Date.trim();\n        const location = item.Job_Location.trim();\n        finalData.push({\n          Job_Position: jobTitle,\n          Company_Name: company,\n          Job_Location: location,\n          Job_Date: date,\n          Job_Url: item.Job_url\n        });\n      }\n    }\n\n    return finalData;\n  } else {\n    console.log(\"no array found to remove space\");\n  }\n};\n\nasync function getRemainingData() {\n  const position_title = [];\n  const company_name = [];\n  const date = [];\n  const job_Url = [];\n  const location = [];\n  const finalArray = [];\n  const url = \"https://www.cebuitjobs.com\";\n\n  for (let i = 0; i !== 143; i += 13) {\n    await axios.get(url + `/more/${i}`).then(function (res) {\n      const $ = cheerio.load(res.data);\n      $('div[class=\"card-body\"]').each(function (index, element) {\n        if ($(element).find(\"img\").length === 1) {\n          $(element).find(\"h5\").each(function (index, job) {\n            position_title.push($(job).text());\n          });\n          $(element).find(\"img\").each(function (index, company) {\n            company_name.push($(company).attr(\"alt\"));\n          });\n          $(element).find(\"h6\").each(function (index, jobDate) {\n            date.push($(jobDate).text());\n          });\n          $(element).find(\"span:first-of-type\").each(function (index, jobLocation) {\n            location.push($(jobLocation).text());\n          });\n          $(element).find(\"h5 a\").each(function (index, url) {\n            job_Url.push($(url).attr(\"href\"));\n          });\n        }\n      });\n    }).catch(function (err) {\n      console.log(\"Error fetching\", err);\n    });\n  }\n\n  for (let i = 0; i <= position_title.length; i++) {\n    if (position_title[i] !== undefined && company_name[i] !== undefined && date[i] !== undefined && job_Url[i] !== undefined) {\n      finalArray.push({\n        Job_Position: position_title[i],\n        Company_Name: company_name[i],\n        Job_Location: location[i],\n        Job_Date: date[i],\n        Job_url: job_Url[i]\n      });\n    }\n  } // console.log(\"array:\", finalArray);\n\n\n  return axios.all(finalArray).then(res => {\n    return res;\n  });\n}\n\nconst midJobData = async () => {\n  const mid_level = await FinalOutput();\n  const length = mid_level.length;\n  return {\n    mid_level,\n    length\n  };\n};\n\nmodule.exports = midJobData;","map":{"version":3,"sources":["C:/Users/chris/Desktop/Jobaho/data/midData.js"],"names":["cheerio","require","axios","filterJobs","arr","getRemainingData","keywords","arrKeywordsFinal","undefined","item","exists","some","res","Job_Position","includes","push","console","log","FinalOutput","keyData","finalData","Company_Name","Job_Date","Job_url","jobTitle","trim","company","date","location","Job_Location","Job_Url","position_title","company_name","job_Url","finalArray","url","i","get","then","$","load","data","each","index","element","find","length","job","text","attr","jobDate","jobLocation","catch","err","all","midJobData","mid_level","module","exports"],"mappings":"AAAA,MAAMA,OAAO,GAAGC,OAAO,CAAC,SAAD,CAAvB;;AACA,MAAMC,KAAK,GAAGD,OAAO,CAAC,OAAD,CAArB;;AAEA,MAAME,UAAU,GAAG,YAAY;AAC7B,QAAMC,GAAG,GAAG,MAAMC,gBAAgB,EAAlC;AACA,QAAMC,QAAQ,GAAG,CACf,WADe,EAEf,aAFe,EAGf,QAHe,EAIf,IAJe,EAKf,OALe,EAMf,gBANe,EAOf,QAPe,EAQf,IARe,CAAjB;AAUA,QAAMC,gBAAgB,GAAG,EAAzB;;AAEA,MAAIH,GAAG,IAAI,CAAP,IAAYA,GAAG,IAAII,SAAvB,EAAkC;AAChC,SAAK,IAAIC,IAAT,IAAiBL,GAAjB,EAAsB;AACpB,YAAMM,MAAM,GAAGJ,QAAQ,CAACK,IAAT,CAAeC,GAAD,IAASH,IAAI,CAACI,YAAL,CAAkBC,QAAlB,CAA2BF,GAA3B,CAAvB,CAAf;;AAEA,UAAI,CAACF,MAAL,EAAa;AACXH,QAAAA,gBAAgB,CAACQ,IAAjB,CAAsBN,IAAtB;AACD;AACF;;AACD,WAAOF,gBAAP;AACD,GATD,MASO;AACLS,IAAAA,OAAO,CAACC,GAAR,CAAY,kCAAZ;AACD;AACF,CA1BD;;AA4BA,MAAMC,WAAW,GAAG,YAAY;AAC9B,QAAMC,OAAO,GAAG,MAAMhB,UAAU,EAAhC;AACA,QAAMiB,SAAS,GAAG,EAAlB;;AAEA,MAAID,OAAJ,EAAa;AACX,SAAK,IAAIV,IAAT,IAAiBU,OAAjB,EAA0B;AACxB,UACEV,IAAI,CAACI,YAAL,KAAsBL,SAAtB,IACAC,IAAI,CAACY,YAAL,KAAsBb,SADtB,IAEAC,IAAI,CAACa,QAAL,KAAkBd,SAFlB,IAGAC,IAAI,CAACc,OAAL,KAAiBf,SAJnB,EAKE;AACA,cAAMgB,QAAQ,GAAGf,IAAI,CAACI,YAAL,CAAkBY,IAAlB,EAAjB;AACA,cAAMC,OAAO,GAAGjB,IAAI,CAACY,YAAL,CAAkBI,IAAlB,EAAhB;AACA,cAAME,IAAI,GAAGlB,IAAI,CAACa,QAAL,CAAcG,IAAd,EAAb;AACA,cAAMG,QAAQ,GAAGnB,IAAI,CAACoB,YAAL,CAAkBJ,IAAlB,EAAjB;AAEAL,QAAAA,SAAS,CAACL,IAAV,CAAe;AACbF,UAAAA,YAAY,EAAEW,QADD;AAEbH,UAAAA,YAAY,EAAEK,OAFD;AAGbG,UAAAA,YAAY,EAAED,QAHD;AAIbN,UAAAA,QAAQ,EAAEK,IAJG;AAKbG,UAAAA,OAAO,EAAErB,IAAI,CAACc;AALD,SAAf;AAOD;AACF;;AAED,WAAOH,SAAP;AACD,GAxBD,MAwBO;AACLJ,IAAAA,OAAO,CAACC,GAAR,CAAY,gCAAZ;AACD;AACF,CA/BD;;AAiCA,eAAeZ,gBAAf,GAAkC;AAChC,QAAM0B,cAAc,GAAG,EAAvB;AACA,QAAMC,YAAY,GAAG,EAArB;AACA,QAAML,IAAI,GAAG,EAAb;AACA,QAAMM,OAAO,GAAG,EAAhB;AACA,QAAML,QAAQ,GAAG,EAAjB;AACA,QAAMM,UAAU,GAAG,EAAnB;AAEA,QAAMC,GAAG,GAAG,4BAAZ;;AACA,OAAK,IAAIC,CAAC,GAAG,CAAb,EAAgBA,CAAC,KAAK,GAAtB,EAA2BA,CAAC,IAAI,EAAhC,EAAoC;AAClC,UAAMlC,KAAK,CACRmC,GADG,CACCF,GAAG,GAAI,SAAQC,CAAE,EADlB,EAEHE,IAFG,CAEE,UAAU1B,GAAV,EAAe;AACnB,YAAM2B,CAAC,GAAGvC,OAAO,CAACwC,IAAR,CAAa5B,GAAG,CAAC6B,IAAjB,CAAV;AAEAF,MAAAA,CAAC,CAAC,wBAAD,CAAD,CAA4BG,IAA5B,CAAiC,UAAUC,KAAV,EAAiBC,OAAjB,EAA0B;AACzD,YAAIL,CAAC,CAACK,OAAD,CAAD,CAAWC,IAAX,CAAgB,KAAhB,EAAuBC,MAAvB,KAAkC,CAAtC,EAAyC;AACvCP,UAAAA,CAAC,CAACK,OAAD,CAAD,CACGC,IADH,CACQ,IADR,EAEGH,IAFH,CAEQ,UAAUC,KAAV,EAAiBI,GAAjB,EAAsB;AAC1BhB,YAAAA,cAAc,CAAChB,IAAf,CAAoBwB,CAAC,CAACQ,GAAD,CAAD,CAAOC,IAAP,EAApB;AACD,WAJH;AAMAT,UAAAA,CAAC,CAACK,OAAD,CAAD,CACGC,IADH,CACQ,KADR,EAEGH,IAFH,CAEQ,UAAUC,KAAV,EAAiBjB,OAAjB,EAA0B;AAC9BM,YAAAA,YAAY,CAACjB,IAAb,CAAkBwB,CAAC,CAACb,OAAD,CAAD,CAAWuB,IAAX,CAAgB,KAAhB,CAAlB;AACD,WAJH;AAMAV,UAAAA,CAAC,CAACK,OAAD,CAAD,CACGC,IADH,CACQ,IADR,EAEGH,IAFH,CAEQ,UAAUC,KAAV,EAAiBO,OAAjB,EAA0B;AAC9BvB,YAAAA,IAAI,CAACZ,IAAL,CAAUwB,CAAC,CAACW,OAAD,CAAD,CAAWF,IAAX,EAAV;AACD,WAJH;AAMAT,UAAAA,CAAC,CAACK,OAAD,CAAD,CACGC,IADH,CACQ,oBADR,EAEGH,IAFH,CAEQ,UAAUC,KAAV,EAAiBQ,WAAjB,EAA8B;AAClCvB,YAAAA,QAAQ,CAACb,IAAT,CAAcwB,CAAC,CAACY,WAAD,CAAD,CAAeH,IAAf,EAAd;AACD,WAJH;AAMAT,UAAAA,CAAC,CAACK,OAAD,CAAD,CACGC,IADH,CACQ,MADR,EAEGH,IAFH,CAEQ,UAAUC,KAAV,EAAiBR,GAAjB,EAAsB;AAC1BF,YAAAA,OAAO,CAAClB,IAAR,CAAawB,CAAC,CAACJ,GAAD,CAAD,CAAOc,IAAP,CAAY,MAAZ,CAAb;AACD,WAJH;AAKD;AACF,OAhCD;AAiCD,KAtCG,EAuCHG,KAvCG,CAuCG,UAAUC,GAAV,EAAe;AACpBrC,MAAAA,OAAO,CAACC,GAAR,CAAY,gBAAZ,EAA8BoC,GAA9B;AACD,KAzCG,CAAN;AA0CD;;AAED,OAAK,IAAIjB,CAAC,GAAG,CAAb,EAAgBA,CAAC,IAAIL,cAAc,CAACe,MAApC,EAA4CV,CAAC,EAA7C,EAAiD;AAC/C,QACEL,cAAc,CAACK,CAAD,CAAd,KAAsB5B,SAAtB,IACAwB,YAAY,CAACI,CAAD,CAAZ,KAAoB5B,SADpB,IAEAmB,IAAI,CAACS,CAAD,CAAJ,KAAY5B,SAFZ,IAGAyB,OAAO,CAACG,CAAD,CAAP,KAAe5B,SAJjB,EAKE;AACA0B,MAAAA,UAAU,CAACnB,IAAX,CAAgB;AACdF,QAAAA,YAAY,EAAEkB,cAAc,CAACK,CAAD,CADd;AAEdf,QAAAA,YAAY,EAAEW,YAAY,CAACI,CAAD,CAFZ;AAGdP,QAAAA,YAAY,EAAED,QAAQ,CAACQ,CAAD,CAHR;AAIdd,QAAAA,QAAQ,EAAEK,IAAI,CAACS,CAAD,CAJA;AAKdb,QAAAA,OAAO,EAAEU,OAAO,CAACG,CAAD;AALF,OAAhB;AAOD;AACF,GArE+B,CAsEhC;;;AACA,SAAOlC,KAAK,CAACoD,GAAN,CAAUpB,UAAV,EAAsBI,IAAtB,CAA4B1B,GAAD,IAAS;AACzC,WAAOA,GAAP;AACD,GAFM,CAAP;AAGD;;AAED,MAAM2C,UAAU,GAAG,YAAY;AAC7B,QAAMC,SAAS,GAAG,MAAMtC,WAAW,EAAnC;AACA,QAAM4B,MAAM,GAAGU,SAAS,CAACV,MAAzB;AAEA,SAAO;AAAEU,IAAAA,SAAF;AAAaV,IAAAA;AAAb,GAAP;AACD,CALD;;AAOAW,MAAM,CAACC,OAAP,GAAiBH,UAAjB","sourcesContent":["const cheerio = require(\"cheerio\");\r\nconst axios = require(\"axios\");\r\n\r\nconst filterJobs = async () => {\r\n  const arr = await getRemainingData();\r\n  const keywords = [\r\n    \"Associate\",\r\n    \"Entry-level\",\r\n    \"Junior\",\r\n    \"Jr\",\r\n    \"Fresh\",\r\n    \"Fresh-Graduate\",\r\n    \"Senior\",\r\n    \"Sr\",\r\n  ];\r\n  const arrKeywordsFinal = [];\r\n\r\n  if (arr != 0 || arr != undefined) {\r\n    for (let item of arr) {\r\n      const exists = keywords.some((res) => item.Job_Position.includes(res));\r\n\r\n      if (!exists) {\r\n        arrKeywordsFinal.push(item);\r\n      }\r\n    }\r\n    return arrKeywordsFinal;\r\n  } else {\r\n    console.log(\"no array found to check Keywords\");\r\n  }\r\n};\r\n\r\nconst FinalOutput = async () => {\r\n  const keyData = await filterJobs();\r\n  const finalData = [];\r\n\r\n  if (keyData) {\r\n    for (let item of keyData) {\r\n      if (\r\n        item.Job_Position !== undefined &&\r\n        item.Company_Name !== undefined &&\r\n        item.Job_Date !== undefined &&\r\n        item.Job_url !== undefined\r\n      ) {\r\n        const jobTitle = item.Job_Position.trim();\r\n        const company = item.Company_Name.trim();\r\n        const date = item.Job_Date.trim();\r\n        const location = item.Job_Location.trim();\r\n\r\n        finalData.push({\r\n          Job_Position: jobTitle,\r\n          Company_Name: company,\r\n          Job_Location: location,\r\n          Job_Date: date,\r\n          Job_Url: item.Job_url,\r\n        });\r\n      }\r\n    }\r\n\r\n    return finalData;\r\n  } else {\r\n    console.log(\"no array found to remove space\");\r\n  }\r\n};\r\n\r\nasync function getRemainingData() {\r\n  const position_title = [];\r\n  const company_name = [];\r\n  const date = [];\r\n  const job_Url = [];\r\n  const location = [];\r\n  const finalArray = [];\r\n\r\n  const url = \"https://www.cebuitjobs.com\";\r\n  for (let i = 0; i !== 143; i += 13) {\r\n    await axios\r\n      .get(url + `/more/${i}`)\r\n      .then(function (res) {\r\n        const $ = cheerio.load(res.data);\r\n\r\n        $('div[class=\"card-body\"]').each(function (index, element) {\r\n          if ($(element).find(\"img\").length === 1) {\r\n            $(element)\r\n              .find(\"h5\")\r\n              .each(function (index, job) {\r\n                position_title.push($(job).text());\r\n              });\r\n\r\n            $(element)\r\n              .find(\"img\")\r\n              .each(function (index, company) {\r\n                company_name.push($(company).attr(\"alt\"));\r\n              });\r\n\r\n            $(element)\r\n              .find(\"h6\")\r\n              .each(function (index, jobDate) {\r\n                date.push($(jobDate).text());\r\n              });\r\n\r\n            $(element)\r\n              .find(\"span:first-of-type\")\r\n              .each(function (index, jobLocation) {\r\n                location.push($(jobLocation).text());\r\n              });\r\n\r\n            $(element)\r\n              .find(\"h5 a\")\r\n              .each(function (index, url) {\r\n                job_Url.push($(url).attr(\"href\"));\r\n              });\r\n          }\r\n        });\r\n      })\r\n      .catch(function (err) {\r\n        console.log(\"Error fetching\", err);\r\n      });\r\n  }\r\n\r\n  for (let i = 0; i <= position_title.length; i++) {\r\n    if (\r\n      position_title[i] !== undefined &&\r\n      company_name[i] !== undefined &&\r\n      date[i] !== undefined &&\r\n      job_Url[i] !== undefined\r\n    ) {\r\n      finalArray.push({\r\n        Job_Position: position_title[i],\r\n        Company_Name: company_name[i],\r\n        Job_Location: location[i],\r\n        Job_Date: date[i],\r\n        Job_url: job_Url[i],\r\n      });\r\n    }\r\n  }\r\n  // console.log(\"array:\", finalArray);\r\n  return axios.all(finalArray).then((res) => {\r\n    return res;\r\n  });\r\n}\r\n\r\nconst midJobData = async () => {\r\n  const mid_level = await FinalOutput();\r\n  const length = mid_level.length;\r\n\r\n  return { mid_level, length };\r\n};\r\n\r\nmodule.exports = midJobData;\r\n"]},"metadata":{},"sourceType":"script"}