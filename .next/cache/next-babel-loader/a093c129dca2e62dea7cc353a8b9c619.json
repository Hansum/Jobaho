{"ast":null,"code":"import JuniorJobData from \"../../data/juniorData\";\nexport default (async (req, res) => {\n  const entry_level = [];\n  const {\n    keyword\n  } = req.query; // Keyword is case sensitive\n\n  const retval = await JuniorJobData();\n\n  if (keyword) {\n    for (let item of retval.entry_level) {\n      const exists = item.Job_Position.includes(keyword);\n\n      if (exists) {\n        entry_level.push(item);\n      }\n    }\n\n    console.log(\"array value\", entry_level);\n    const length = entry_level.length;\n    const result = {\n      entry_level,\n      length\n    };\n    res.status(200).json(result);\n  }\n\n  if (!keyword.length) {\n    res.status(200).json(retval);\n  }\n});","map":{"version":3,"sources":["C:/Users/chris/Desktop/Jobaho/pages/api/juniorAPI.js"],"names":["JuniorJobData","req","res","entry_level","keyword","query","retval","item","exists","Job_Position","includes","push","console","log","length","result","status","json"],"mappings":"AAAA,OAAOA,aAAP,MAA0B,uBAA1B;AAEA,gBAAe,OAAOC,GAAP,EAAYC,GAAZ,KAAoB;AACjC,QAAMC,WAAW,GAAG,EAApB;AACA,QAAM;AAAEC,IAAAA;AAAF,MAAcH,GAAG,CAACI,KAAxB,CAFiC,CAEF;;AAC/B,QAAMC,MAAM,GAAG,MAAMN,aAAa,EAAlC;;AAEA,MAAII,OAAJ,EAAa;AACX,SAAK,IAAIG,IAAT,IAAiBD,MAAM,CAACH,WAAxB,EAAqC;AACnC,YAAMK,MAAM,GAAGD,IAAI,CAACE,YAAL,CAAkBC,QAAlB,CAA2BN,OAA3B,CAAf;;AAEA,UAAII,MAAJ,EAAY;AACVL,QAAAA,WAAW,CAACQ,IAAZ,CAAiBJ,IAAjB;AACD;AACF;;AACDK,IAAAA,OAAO,CAACC,GAAR,CAAY,aAAZ,EAA2BV,WAA3B;AACA,UAAMW,MAAM,GAAGX,WAAW,CAACW,MAA3B;AACA,UAAMC,MAAM,GAAG;AAAEZ,MAAAA,WAAF;AAAeW,MAAAA;AAAf,KAAf;AACAZ,IAAAA,GAAG,CAACc,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqBF,MAArB;AACD;;AAED,MAAI,CAACX,OAAO,CAACU,MAAb,EAAqB;AACnBZ,IAAAA,GAAG,CAACc,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqBX,MAArB;AACD;AACF,CAtBD","sourcesContent":["import JuniorJobData from \"../../data/juniorData\";\r\n\r\nexport default async (req, res) => {\r\n  const entry_level = [];\r\n  const { keyword } = req.query; // Keyword is case sensitive\r\n  const retval = await JuniorJobData();\r\n\r\n  if (keyword) {\r\n    for (let item of retval.entry_level) {\r\n      const exists = item.Job_Position.includes(keyword);\r\n\r\n      if (exists) {\r\n        entry_level.push(item);\r\n      }\r\n    }\r\n    console.log(\"array value\", entry_level);\r\n    const length = entry_level.length;\r\n    const result = { entry_level, length };\r\n    res.status(200).json(result);\r\n  }\r\n\r\n  if (!keyword.length) {\r\n    res.status(200).json(retval);\r\n  }\r\n};\r\n"]},"metadata":{},"sourceType":"module"}