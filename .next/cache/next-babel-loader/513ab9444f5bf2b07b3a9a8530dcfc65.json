{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\chris\\\\Desktop\\\\Jobaho\\\\pages\\\\junior.js\";\nvar __jsx = React.createElement;\nimport React from \"react\";\nimport { useRouter } from \"next/router\";\nimport useSWR from \"swr\";\nimport JobCardsLayout from \"../components/JobsectionCards\";\nimport fetch from \"isomorphic-unfetch\";\nimport NextLink from \"next/link\";\nimport Loader from \"../components/LoadingLayout\";\nimport { Box, Flex, Text, Button, ButtonGroup, Link, Input } from \"@chakra-ui/core\";\n\nconst fetcher = async url => {\n  const res = await fetch(url);\n  const data = await res.json();\n\n  if (res.status !== 200) {\n    throw new Error(\"error\", data.message);\n  }\n\n  return data;\n};\n\nconst SearchBar = ({\n  searchJob\n}) => {\n  const [value, setValue] = React.useState(\"\");\n\n  const handleChange = event => setValue(event.target.value);\n\n  const handleSubmit = e => {\n    e.preventDefault();\n    if (!value) return;\n    searchJob(value);\n    setValue(\"\");\n  };\n\n  return __jsx(\"form\", {\n    onSubmit: handleSubmit,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 5\n    }\n  }, __jsx(Input, {\n    value: value,\n    onChange: handleChange,\n    placeholder: \"Search Job Title\",\n    size: \"md\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 7\n    }\n  }));\n};\n\nconst searchJob = () => {\n  const {\n    query\n  } = useRouter();\n  const {\n    data,\n    error\n  } = useSWR(`/api/juniorAPI${query.keyword ? \"?keyword=\" + query.value : \"\"}`, fetcher);\n};\n\nconst JobCards = ({\n  title,\n  company,\n  location,\n  url,\n  index\n}) => {\n  return __jsx(Box, {\n    m: 3,\n    borderWidth: \"1px\",\n    bg: \"white\",\n    flex: \"0 1 24%\",\n    p: 6,\n    rounded: \"lg\",\n    mt: 5,\n    key: index,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 5\n    }\n  }, __jsx(Box, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 7\n    }\n  }, __jsx(Box, {\n    color: \"gray.500\",\n    fontWeight: \"semibold\",\n    letterSpacing: \"wide\",\n    textTransform: \"uppercase\",\n    fontSize: \"xs\",\n    textAlign: \"center\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 9\n    }\n  }, company)), __jsx(Box, {\n    mt: \"2\",\n    fontWeight: \"semibold\",\n    fontSize: \"lg\",\n    textAlign: \"center\",\n    color: \"blue.600\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 7\n    }\n  }, __jsx(Link, {\n    href: url,\n    isExternal: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 9\n    }\n  }, title)), __jsx(Box, {\n    mt: \"2\",\n    color: \"gray.600\",\n    fontSize: \"sm\",\n    textAlign: \"center\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 7\n    }\n  }, location));\n};\n\nexport default function FetchData() {\n  const {\n    data,\n    error\n  } = useSWR(\"/api/juniorAPI\", fetcher);\n  console.log(\"Input value:\", data);\n  if (error) return __jsx(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 106,\n      columnNumber: 21\n    }\n  }, \"Failed to load entry level api\");\n\n  if (!data) {\n    return __jsx(Loader, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 108,\n        columnNumber: 12\n      }\n    }, \"Scraping Junior Level Jobs\");\n  } //BOX ----> DIV\n\n\n  return __jsx(JobCardsLayout, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 113,\n      columnNumber: 5\n    }\n  }, __jsx(Box, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 114,\n      columnNumber: 7\n    }\n  }, __jsx(Box, {\n    p: 3,\n    textAlign: \"center\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 115,\n      columnNumber: 9\n    }\n  }, __jsx(Text, {\n    color: \"white\",\n    textAlign: \"center\",\n    fontSize: \"40px\",\n    fontFamily: \"Sen\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 116,\n      columnNumber: 11\n    }\n  }, \"Junior / Entry Level Jobs\")), __jsx(Text, {\n    color: \"white\",\n    m: 5,\n    textAlign: \"center\",\n    fontSize: \"20px\",\n    fontFamily: \"Sen\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 126,\n      columnNumber: 9\n    }\n  }, \"Number of Jobs: \", data.length), __jsx(Flex, {\n    flexWrap: \"wrap\",\n    justifyContent: \"center\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 136,\n      columnNumber: 9\n    }\n  }, __jsx(SearchBar, {\n    searchJob: searchJob,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 137,\n      columnNumber: 11\n    }\n  }), data.entry_level.map((res, index) => {\n    const {\n      Job_Position,\n      Job_Company_Name,\n      Job_Location,\n      Job_url\n    } = res;\n    return __jsx(JobCards, {\n      index: index,\n      title: Job_Position,\n      company: Job_Company_Name,\n      location: Job_Location,\n      url: Job_url,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 146,\n        columnNumber: 15\n      }\n    });\n  }))));\n}","map":{"version":3,"sources":["C:/Users/chris/Desktop/Jobaho/pages/junior.js"],"names":["React","useRouter","useSWR","JobCardsLayout","fetch","NextLink","Loader","Box","Flex","Text","Button","ButtonGroup","Link","Input","fetcher","url","res","data","json","status","Error","message","SearchBar","searchJob","value","setValue","useState","handleChange","event","target","handleSubmit","e","preventDefault","query","error","keyword","JobCards","title","company","location","index","FetchData","console","log","length","entry_level","map","Job_Position","Job_Company_Name","Job_Location","Job_url"],"mappings":"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","sourcesContent":["import React from \"react\";\r\nimport { useRouter } from \"next/router\";\r\nimport useSWR from \"swr\";\r\nimport JobCardsLayout from \"../components/JobsectionCards\";\r\nimport fetch from \"isomorphic-unfetch\";\r\nimport NextLink from \"next/link\";\r\nimport Loader from \"../components/LoadingLayout\";\r\nimport {\r\n  Box,\r\n  Flex,\r\n  Text,\r\n  Button,\r\n  ButtonGroup,\r\n  Link,\r\n  Input,\r\n} from \"@chakra-ui/core\";\r\n\r\nconst fetcher = async (url) => {\r\n  const res = await fetch(url);\r\n  const data = await res.json();\r\n\r\n  if (res.status !== 200) {\r\n    throw new Error(\"error\", data.message);\r\n  }\r\n  return data;\r\n};\r\n\r\nconst SearchBar = ({ searchJob }) => {\r\n  const [value, setValue] = React.useState(\"\");\r\n  const handleChange = (event) => setValue(event.target.value);\r\n\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    if (!value) return;\r\n    searchJob(value);\r\n    setValue(\"\");\r\n  };\r\n\r\n  return (\r\n    <form onSubmit={handleSubmit}>\r\n      <Input\r\n        value={value}\r\n        onChange={handleChange}\r\n        placeholder=\"Search Job Title\"\r\n        size=\"md\"\r\n      ></Input>\r\n    </form>\r\n  );\r\n};\r\n\r\nconst searchJob = () => {\r\n  const { query } = useRouter();\r\n  const { data, error } = useSWR(\r\n    `/api/juniorAPI${query.keyword ? \"?keyword=\" + query.value : \"\"}`,\r\n    fetcher\r\n  );\r\n};\r\n\r\nconst JobCards = ({ title, company, location, url, index }) => {\r\n  return (\r\n    <Box\r\n      m={3}\r\n      borderWidth=\"1px\"\r\n      bg=\"white\"\r\n      flex=\"0 1 24%\"\r\n      p={6}\r\n      rounded=\"lg\"\r\n      mt={5}\r\n      key={index}\r\n    >\r\n      <Box>\r\n        <Box\r\n          color=\"gray.500\"\r\n          fontWeight=\"semibold\"\r\n          letterSpacing=\"wide\"\r\n          textTransform=\"uppercase\"\r\n          fontSize=\"xs\"\r\n          textAlign=\"center\"\r\n        >\r\n          {company}\r\n        </Box>\r\n      </Box>\r\n      <Box\r\n        mt=\"2\"\r\n        fontWeight=\"semibold\"\r\n        fontSize=\"lg\"\r\n        textAlign=\"center\"\r\n        color=\"blue.600\"\r\n      >\r\n        <Link href={url} isExternal>\r\n          {title}\r\n        </Link>\r\n      </Box>\r\n      <Box mt=\"2\" color=\"gray.600\" fontSize=\"sm\" textAlign=\"center\">\r\n        {location}\r\n      </Box>\r\n    </Box>\r\n  );\r\n};\r\n\r\nexport default function FetchData() {\r\n  const { data, error } = useSWR(\"/api/juniorAPI\", fetcher);\r\n\r\n  console.log(\"Input value:\", data);\r\n\r\n  if (error) return <div>Failed to load entry level api</div>;\r\n  if (!data) {\r\n    return <Loader>Scraping Junior Level Jobs</Loader>;\r\n  }\r\n\r\n  //BOX ----> DIV\r\n  return (\r\n    <JobCardsLayout>\r\n      <Box>\r\n        <Box p={3} textAlign=\"center\">\r\n          <Text\r\n            color=\"white\"\r\n            textAlign=\"center\"\r\n            fontSize=\"40px\"\r\n            fontFamily=\"Sen\"\r\n          >\r\n            Junior / Entry Level Jobs\r\n          </Text>\r\n        </Box>\r\n\r\n        <Text\r\n          color=\"white\"\r\n          m={5}\r\n          textAlign=\"center\"\r\n          fontSize=\"20px\"\r\n          fontFamily=\"Sen\"\r\n        >\r\n          Number of Jobs: {data.length}\r\n        </Text>\r\n\r\n        <Flex flexWrap=\"wrap\" justifyContent=\"center\">\r\n          <SearchBar searchJob={searchJob}></SearchBar>\r\n          {data.entry_level.map((res, index) => {\r\n            const {\r\n              Job_Position,\r\n              Job_Company_Name,\r\n              Job_Location,\r\n              Job_url,\r\n            } = res;\r\n            return (\r\n              <JobCards\r\n                index={index}\r\n                title={Job_Position}\r\n                company={Job_Company_Name}\r\n                location={Job_Location}\r\n                url={Job_url}\r\n              ></JobCards>\r\n            );\r\n          })}\r\n        </Flex>\r\n      </Box>\r\n    </JobCardsLayout>\r\n  );\r\n}\r\n"]},"metadata":{},"sourceType":"module"}