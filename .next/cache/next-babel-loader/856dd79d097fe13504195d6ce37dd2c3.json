{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nvar _jsxFileName = \"C:\\\\Users\\\\chris\\\\Desktop\\\\Jobaho\\\\pages\\\\senior.js\";\nvar __jsx = React.createElement;\nimport React from \"react\";\nimport useSWR from \"swr\";\nimport JobCardsLayout from \"../components/JobsectionCards\";\nimport Loader from \"../components/LoadingLayout\";\nimport fetch from \"isomorphic-unfetch\";\nimport JobCards from \"../components/CardsLayout\";\nimport { Box, Flex, Link, Text, Button, ButtonGroup } from \"@chakra-ui/core\";\n\nvar fetcher = function fetcher(url) {\n  var res, data;\n  return _regeneratorRuntime.async(function fetcher$(_context) {\n    while (1) {\n      switch (_context.prev = _context.next) {\n        case 0:\n          _context.next = 2;\n          return _regeneratorRuntime.awrap(fetch(url));\n\n        case 2:\n          res = _context.sent;\n          _context.next = 5;\n          return _regeneratorRuntime.awrap(res.json());\n\n        case 5:\n          data = _context.sent;\n\n          if (!(res.status !== 200)) {\n            _context.next = 8;\n            break;\n          }\n\n          throw new Error(\"error\", data.message);\n\n        case 8:\n          return _context.abrupt(\"return\", data);\n\n        case 9:\n        case \"end\":\n          return _context.stop();\n      }\n    }\n  }, null, null, null, Promise);\n};\n\nexport default function FetchData() {\n  var _this = this;\n\n  var _useSWR = useSWR(\"/api/seniorAPI\", fetcher),\n      data = _useSWR.data,\n      error = _useSWR.error; // console.log(\"Data:\", data);\n\n\n  if (error) return __jsx(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 21\n    }\n  }, \"Failed to load entry level api\");\n\n  if (!data) {\n    return __jsx(Loader, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 12\n      }\n    }, \"Scraping Senior Level Jobs\");\n  } //BOX ----> DIV\n\n\n  return __jsx(JobCardsLayout, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 5\n    }\n  }, __jsx(Box, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 7\n    }\n  }, __jsx(Text, {\n    color: \"white\",\n    m: 5,\n    textAlign: \"center\",\n    fontSize: \"30px\",\n    fontFamily: \"Sen\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 9\n    }\n  }, \"Senior Level Jobs\"), __jsx(Text, {\n    color: \"white\",\n    m: 5,\n    textAlign: \"center\",\n    fontSize: \"20px\",\n    fontFamily: \"Sen\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 9\n    }\n  }, \"Number of Jobs: \", data.length), __jsx(Flex, {\n    flexWrap: \"wrap\",\n    justifyContent: \"center\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 9\n    }\n  }, data.map(function (res, index) {\n    var title = res.title,\n        company = res.company,\n        location = res.location,\n        url = res.url;\n    return __jsx(JobCards, {\n      title: title,\n      company: company,\n      location: location,\n      url: url,\n      index: index,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 15\n      }\n    });\n  }))));\n}","map":{"version":3,"sources":["C:/Users/chris/Desktop/Jobaho/pages/senior.js"],"names":["React","useSWR","JobCardsLayout","Loader","fetch","JobCards","Box","Flex","Link","Text","Button","ButtonGroup","fetcher","url","res","json","data","status","Error","message","FetchData","error","length","map","index","title","company","location"],"mappings":"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","sourcesContent":["import React from \"react\";\r\nimport useSWR from \"swr\";\r\nimport JobCardsLayout from \"../components/JobsectionCards\";\r\nimport Loader from \"../components/LoadingLayout\";\r\nimport fetch from \"isomorphic-unfetch\";\r\nimport JobCards from \"../components/CardsLayout\";\r\nimport { Box, Flex, Link, Text, Button, ButtonGroup } from \"@chakra-ui/core\";\r\n\r\nconst fetcher = async (url) => {\r\n  const res = await fetch(url);\r\n  const data = await res.json();\r\n\r\n  if (res.status !== 200) {\r\n    throw new Error(\"error\", data.message);\r\n  }\r\n  return data;\r\n};\r\n\r\nexport default function FetchData() {\r\n  const { data, error } = useSWR(\"/api/seniorAPI\", fetcher);\r\n  // console.log(\"Data:\", data);\r\n\r\n  if (error) return <div>Failed to load entry level api</div>;\r\n  if (!data) {\r\n    return <Loader>Scraping Senior Level Jobs</Loader>;\r\n  }\r\n\r\n  //BOX ----> DIV\r\n  return (\r\n    <JobCardsLayout>\r\n      <Box>\r\n        <Text\r\n          color=\"white\"\r\n          m={5}\r\n          textAlign=\"center\"\r\n          fontSize=\"30px\"\r\n          fontFamily=\"Sen\"\r\n        >\r\n          Senior Level Jobs\r\n        </Text>\r\n        <Text\r\n          color=\"white\"\r\n          m={5}\r\n          textAlign=\"center\"\r\n          fontSize=\"20px\"\r\n          fontFamily=\"Sen\"\r\n        >\r\n          Number of Jobs: {data.length}\r\n        </Text>\r\n        <Flex flexWrap=\"wrap\" justifyContent=\"center\">\r\n          {data.map((res, index) => {\r\n            const { title, company, location, url } = res;\r\n            return (\r\n              <JobCards\r\n                title={title}\r\n                company={company}\r\n                location={location}\r\n                url={url}\r\n                index={index}\r\n              ></JobCards>\r\n            );\r\n          })}\r\n        </Flex>\r\n      </Box>\r\n    </JobCardsLayout>\r\n  );\r\n}\r\n"]},"metadata":{},"sourceType":"module"}