{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _classCallCheck from \"@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"@babel/runtime/helpers/esm/inherits\";\nvar __jsx = React.createElement;\n\nfunction _createSuper(Derived) { return function () { var Super = _getPrototypeOf(Derived), result; if (_isNativeReflectConstruct()) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nimport React, { Component } from \"react\";\nimport fetch from \"isomorphic-unfetch\";\nimport JobCardsLayout from \"../components/JobsectionCards\";\nimport { Box, Flex, Link, Text, Button, ButtonGroup } from \"@chakra-ui/core\";\n\nvar _default = /*#__PURE__*/function (_Component) {\n  _inherits(_default, _Component);\n\n  var _super = _createSuper(_default);\n\n  function _default(props) {\n    _classCallCheck(this, _default);\n\n    return _super.call(this, props);\n  }\n\n  _createClass(_default, [{\n    key: \"render\",\n    // jobCards() {\n    //   return this.props.positionResult.senior_level.map((res, index) => {\n    //     const { Job_Position, Job_Company_Name, Job_Location, Job_url } = res;\n    //     return (\n    //       <article className=\"job-card\" key={index}>\n    //         <h1>{Job_Position}</h1>\n    //         <h2>{Job_Company_Name}</h2>\n    //         <h2>{Job_Location}</h2>\n    //         <h2>{Job_url}</h2>\n    //       </article>\n    //     );\n    //   });\n    // }\n    value: function render() {\n      return __jsx(JobCardsLayout, null, __jsx(Box, null, __jsx(Text, {\n        color: \"white\",\n        m: 5,\n        textAlign: \"center\",\n        fontSize: \"30px\",\n        fontFamily: \"Sen\"\n      }, \"Junior / Entry Level Jobs\"), __jsx(Flex, {\n        flexWrap: \"wrap\",\n        justifyContent: \"center\"\n      }, this.props.positionResult.senior_level.map(function (res, index) {\n        var title = res.title,\n            company = res.company,\n            location = res.location,\n            url = res.url;\n        return __jsx(Box, {\n          m: 3,\n          borderWidth: \"1px\",\n          bg: \"white\",\n          flex: \"0 1 24%\",\n          p: 6,\n          rounded: \"lg\",\n          mt: 5,\n          key: index\n        }, __jsx(Box, null, __jsx(Box, {\n          color: \"gray.500\",\n          fontWeight: \"semibold\",\n          letterSpacing: \"wide\",\n          textTransform: \"uppercase\",\n          fontSize: \"xs\",\n          textAlign: \"center\"\n        }, company)), __jsx(Box, {\n          mt: \"2\",\n          fontWeight: \"semibold\",\n          fontSize: \"lg\",\n          textAlign: \"center\",\n          color: \"blue.600\"\n        }, __jsx(Link, {\n          href: Job_url,\n          isExternal: true\n        }, title)), __jsx(Box, {\n          mt: \"2\",\n          color: \"gray.600\",\n          fontSize: \"sm\",\n          textAlign: \"center\"\n        }, location));\n      }))));\n    }\n  }], [{\n    key: \"getInitialProps\",\n    value: function getInitialProps(_ref) {\n      var req, baseUrl, res, data;\n      return _regeneratorRuntime.async(function getInitialProps$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              req = _ref.req;\n              baseUrl = req ? \"\".concat(req.protocol, \"://\").concat(req.get(\"Host\")) : \"\";\n              _context.next = 4;\n              return _regeneratorRuntime.awrap(fetch(\"\".concat(baseUrl, \"/api/SeniorPosition\")));\n\n            case 4:\n              res = _context.sent;\n              _context.next = 7;\n              return _regeneratorRuntime.awrap(res.json());\n\n            case 7:\n              data = _context.sent;\n              return _context.abrupt(\"return\", {\n                positionResult: data.data\n              });\n\n            case 9:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, null, null, null, Promise);\n    }\n  }]);\n\n  return _default;\n}(Component);\n\nexport { _default as default };","map":{"version":3,"sources":["C:/Users/chris/Desktop/jobaho/pages/testing.js"],"names":["React","Component","fetch","JobCardsLayout","Box","Flex","Link","Text","Button","ButtonGroup","props","positionResult","senior_level","map","res","index","title","company","location","url","Job_url","req","baseUrl","protocol","get","json","data"],"mappings":";;;;;;;;;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,KAAP,MAAkB,oBAAlB;AACA,OAAOC,cAAP,MAA2B,+BAA3B;AACA,SAASC,GAAT,EAAcC,IAAd,EAAoBC,IAApB,EAA0BC,IAA1B,EAAgCC,MAAhC,EAAwCC,WAAxC,QAA2D,iBAA3D;;;;;;;AAGE,oBAAYC,KAAZ,EAAmB;AAAA;;AAAA,6BACXA,KADW;AAElB;;;;AAQD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;6BAES;AACP,aACE,MAAC,cAAD,QACE,MAAC,GAAD,QACE,MAAC,IAAD;AACE,QAAA,KAAK,EAAC,OADR;AAEE,QAAA,CAAC,EAAE,CAFL;AAGE,QAAA,SAAS,EAAC,QAHZ;AAIE,QAAA,QAAQ,EAAC,MAJX;AAKE,QAAA,UAAU,EAAC;AALb,qCADF,EAUE,MAAC,IAAD;AAAM,QAAA,QAAQ,EAAC,MAAf;AAAsB,QAAA,cAAc,EAAC;AAArC,SACG,KAAKA,KAAL,CAAWC,cAAX,CAA0BC,YAA1B,CAAuCC,GAAvC,CAA2C,UAACC,GAAD,EAAMC,KAAN,EAAgB;AAAA,YAClDC,KADkD,GAChBF,GADgB,CAClDE,KADkD;AAAA,YAC3CC,OAD2C,GAChBH,GADgB,CAC3CG,OAD2C;AAAA,YAClCC,QADkC,GAChBJ,GADgB,CAClCI,QADkC;AAAA,YACxBC,GADwB,GAChBL,GADgB,CACxBK,GADwB;AAE1D,eACE,MAAC,GAAD;AACE,UAAA,CAAC,EAAE,CADL;AAEE,UAAA,WAAW,EAAC,KAFd;AAGE,UAAA,EAAE,EAAC,OAHL;AAIE,UAAA,IAAI,EAAC,SAJP;AAKE,UAAA,CAAC,EAAE,CALL;AAME,UAAA,OAAO,EAAC,IANV;AAOE,UAAA,EAAE,EAAE,CAPN;AAQE,UAAA,GAAG,EAAEJ;AARP,WAUE,MAAC,GAAD,QACE,MAAC,GAAD;AACE,UAAA,KAAK,EAAC,UADR;AAEE,UAAA,UAAU,EAAC,UAFb;AAGE,UAAA,aAAa,EAAC,MAHhB;AAIE,UAAA,aAAa,EAAC,WAJhB;AAKE,UAAA,QAAQ,EAAC,IALX;AAME,UAAA,SAAS,EAAC;AANZ,WAQGE,OARH,CADF,CAVF,EAsBE,MAAC,GAAD;AACE,UAAA,EAAE,EAAC,GADL;AAEE,UAAA,UAAU,EAAC,UAFb;AAGE,UAAA,QAAQ,EAAC,IAHX;AAIE,UAAA,SAAS,EAAC,QAJZ;AAKE,UAAA,KAAK,EAAC;AALR,WAOE,MAAC,IAAD;AAAM,UAAA,IAAI,EAAEG,OAAZ;AAAqB,UAAA,UAAU;AAA/B,WACGJ,KADH,CAPF,CAtBF,EAiCE,MAAC,GAAD;AAAK,UAAA,EAAE,EAAC,GAAR;AAAY,UAAA,KAAK,EAAC,UAAlB;AAA6B,UAAA,QAAQ,EAAC,IAAtC;AAA2C,UAAA,SAAS,EAAC;AAArD,WACGE,QADH,CAjCF,CADF;AAuCD,OAzCA,CADH,CAVF,CADF,CADF;AA2DD;;;;;;;;;AAjF8BG,cAAAA,G,QAAAA,G;AACvBC,cAAAA,O,GAAUD,GAAG,aAAMA,GAAG,CAACE,QAAV,gBAAwBF,GAAG,CAACG,GAAJ,CAAQ,MAAR,CAAxB,IAA4C,E;;+CAC7CtB,KAAK,WAAIoB,OAAJ,yB;;;AAAjBR,cAAAA,G;;+CACaA,GAAG,CAACW,IAAJ,E;;;AAAbC,cAAAA,I;+CACC;AAAEf,gBAAAA,cAAc,EAAEe,IAAI,CAACA;AAAvB,e;;;;;;;;;;;;EARkBzB,S","sourcesContent":["import React, { Component } from \"react\";\r\nimport fetch from \"isomorphic-unfetch\";\r\nimport JobCardsLayout from \"../components/JobsectionCards\";\r\nimport { Box, Flex, Link, Text, Button, ButtonGroup } from \"@chakra-ui/core\";\r\n\r\nexport default class extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n  }\r\n  static async getInitialProps({ req }) {\r\n    const baseUrl = req ? `${req.protocol}://${req.get(\"Host\")}` : \"\";\r\n    const res = await fetch(`${baseUrl}/api/SeniorPosition`);\r\n    const data = await res.json();\r\n    return { positionResult: data.data };\r\n  }\r\n\r\n  // jobCards() {\r\n  //   return this.props.positionResult.senior_level.map((res, index) => {\r\n  //     const { Job_Position, Job_Company_Name, Job_Location, Job_url } = res;\r\n  //     return (\r\n  //       <article className=\"job-card\" key={index}>\r\n  //         <h1>{Job_Position}</h1>\r\n  //         <h2>{Job_Company_Name}</h2>\r\n  //         <h2>{Job_Location}</h2>\r\n  //         <h2>{Job_url}</h2>\r\n  //       </article>\r\n  //     );\r\n  //   });\r\n  // }\r\n\r\n  render() {\r\n    return (\r\n      <JobCardsLayout>\r\n        <Box>\r\n          <Text\r\n            color=\"white\"\r\n            m={5}\r\n            textAlign=\"center\"\r\n            fontSize=\"30px\"\r\n            fontFamily=\"Sen\"\r\n          >\r\n            Junior / Entry Level Jobs\r\n          </Text>\r\n          <Flex flexWrap=\"wrap\" justifyContent=\"center\">\r\n            {this.props.positionResult.senior_level.map((res, index) => {\r\n              const { title, company, location, url } = res;\r\n              return (\r\n                <Box\r\n                  m={3}\r\n                  borderWidth=\"1px\"\r\n                  bg=\"white\"\r\n                  flex=\"0 1 24%\"\r\n                  p={6}\r\n                  rounded=\"lg\"\r\n                  mt={5}\r\n                  key={index}\r\n                >\r\n                  <Box>\r\n                    <Box\r\n                      color=\"gray.500\"\r\n                      fontWeight=\"semibold\"\r\n                      letterSpacing=\"wide\"\r\n                      textTransform=\"uppercase\"\r\n                      fontSize=\"xs\"\r\n                      textAlign=\"center\"\r\n                    >\r\n                      {company}\r\n                    </Box>\r\n                  </Box>\r\n                  <Box\r\n                    mt=\"2\"\r\n                    fontWeight=\"semibold\"\r\n                    fontSize=\"lg\"\r\n                    textAlign=\"center\"\r\n                    color=\"blue.600\"\r\n                  >\r\n                    <Link href={Job_url} isExternal>\r\n                      {title}\r\n                    </Link>\r\n                  </Box>\r\n                  <Box mt=\"2\" color=\"gray.600\" fontSize=\"sm\" textAlign=\"center\">\r\n                    {location}\r\n                  </Box>\r\n                </Box>\r\n              );\r\n            })}\r\n          </Flex>\r\n        </Box>\r\n      </JobCardsLayout>\r\n    );\r\n  }\r\n}\r\n"]},"metadata":{},"sourceType":"module"}