{"ast":null,"code":"var __jsx = React.createElement;\n// import fetch from \"isomorphic-unfetch\";\n// function test({ testData }) {\n//   return <div>SAMPLE DATA FROM nNode: {testData}</div>;\n// }\n// test.getInitialProps = async ctx => {\n//   const res = await fetch(\"http://localhost:3000/testNode\");\n//   const json = await res.json();\n//   return { testData: json.data };\n// };\n// export default test;\nimport React, { Component } from \"react\";\nimport fetch from \"isomorphic-unfetch\";\nimport \"../assets/css/bulmaTheme.scss\";\nexport default class extends Component {\n  static async getInitialProps({\n    req\n  }) {\n    const baseUrl = req ? `${req.protocol}://${req.get(\"Host\")}` : \"\";\n    const res = await fetch(`${baseUrl}/api/test`);\n    const data = await res.json();\n    return {\n      message: data.message\n    };\n  }\n\n  render() {\n    return __jsx(\"h1\", null, \"Hello: \", this.props.message);\n  }\n\n} // import React, { Component } from \"react\";\n// import axios from \"axios\";\n// class TestingPage extends Component {\n//   constructor(props) {\n//     super(props);\n//     this.state = {\n//       data: []\n//     };\n//   }\n//   fetchData() {\n//     axios\n//       .get(\"/api/test\")\n//       .then(data => data.json())\n//       .then(res => this.setState({ data: res.data }))\n//       .catch(err => console.log(\"error\", err));\n//   }\n//   renderData() {\n//     const { data } = this.state;\n//     return <h1>{data}</h1>;\n//   }\n//   render() {\n//     return (\n//       <div>\n//         <h1>TEST ONLY</h1>\n//         {this.renderData()}\n//       </div>\n//     );\n//   }\n// }\n// export default TestingPage;","map":{"version":3,"sources":["C:/Users/chris/Desktop/jobaho/pages/testing.js"],"names":["React","Component","fetch","getInitialProps","req","baseUrl","protocol","get","res","data","json","message","render","props"],"mappings":";AAAA;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,KAAP,MAAkB,oBAAlB;AACA,OAAO,+BAAP;AAEA,eAAe,cAAcD,SAAd,CAAwB;AACrC,eAAaE,eAAb,CAA6B;AAAEC,IAAAA;AAAF,GAA7B,EAAsC;AACpC,UAAMC,OAAO,GAAGD,GAAG,GAAI,GAAEA,GAAG,CAACE,QAAS,MAAKF,GAAG,CAACG,GAAJ,CAAQ,MAAR,CAAgB,EAAxC,GAA4C,EAA/D;AACA,UAAMC,GAAG,GAAG,MAAMN,KAAK,CAAE,GAAEG,OAAQ,WAAZ,CAAvB;AACA,UAAMI,IAAI,GAAG,MAAMD,GAAG,CAACE,IAAJ,EAAnB;AACA,WAAO;AAAEC,MAAAA,OAAO,EAAEF,IAAI,CAACE;AAAhB,KAAP;AACD;;AAEDC,EAAAA,MAAM,GAAG;AACP,WAAO,6BAAY,KAAKC,KAAL,CAAWF,OAAvB,CAAP;AACD;;AAVoC,C,CAavC;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA","sourcesContent":["// import fetch from \"isomorphic-unfetch\";\r\n\r\n// function test({ testData }) {\r\n//   return <div>SAMPLE DATA FROM nNode: {testData}</div>;\r\n// }\r\n\r\n// test.getInitialProps = async ctx => {\r\n//   const res = await fetch(\"http://localhost:3000/testNode\");\r\n//   const json = await res.json();\r\n//   return { testData: json.data };\r\n// };\r\n\r\n// export default test;\r\nimport React, { Component } from \"react\";\r\nimport fetch from \"isomorphic-unfetch\";\r\nimport \"../assets/css/bulmaTheme.scss\";\r\n\r\nexport default class extends Component {\r\n  static async getInitialProps({ req }) {\r\n    const baseUrl = req ? `${req.protocol}://${req.get(\"Host\")}` : \"\";\r\n    const res = await fetch(`${baseUrl}/api/test`);\r\n    const data = await res.json();\r\n    return { message: data.message };\r\n  }\r\n\r\n  render() {\r\n    return <h1>Hello: {this.props.message}</h1>;\r\n  }\r\n}\r\n\r\n// import React, { Component } from \"react\";\r\n// import axios from \"axios\";\r\n\r\n// class TestingPage extends Component {\r\n//   constructor(props) {\r\n//     super(props);\r\n//     this.state = {\r\n//       data: []\r\n//     };\r\n//   }\r\n\r\n//   fetchData() {\r\n//     axios\r\n//       .get(\"/api/test\")\r\n//       .then(data => data.json())\r\n//       .then(res => this.setState({ data: res.data }))\r\n//       .catch(err => console.log(\"error\", err));\r\n//   }\r\n\r\n//   renderData() {\r\n//     const { data } = this.state;\r\n//     return <h1>{data}</h1>;\r\n//   }\r\n\r\n//   render() {\r\n//     return (\r\n//       <div>\r\n//         <h1>TEST ONLY</h1>\r\n//         {this.renderData()}\r\n//       </div>\r\n//     );\r\n//   }\r\n// }\r\n\r\n// export default TestingPage;\r\n"]},"metadata":{},"sourceType":"module"}