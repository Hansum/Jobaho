{"ast":null,"code":"const cheerio = require(\"cheerio\");\n\nconst axios = require(\"axios\"); // const filterJobs = async () => {\n//   const arr = await getRemainingData();\n//   const keywords = [\n//     \"Associate\",\n//     \"Entry-level\",\n//     \"Junior\",\n//     \"Jr\",\n//     \"Fresh\",\n//     \"Fresh-Graduate\",\n//     \"Senior\",\n//     \"Sr\",\n//   ];\n//   const arrKeywordsFinal = [];\n//   if (arr != 0 || arr != undefined) {\n//     for (let item of arr) {\n//       const exists = keywords.some((res) => item.Job_Position.includes(res));\n//       if (!exists) {\n//         arrKeywordsFinal.push(item);\n//       }\n//     }\n//     return arrKeywordsFinal;\n//   } else {\n//     console.log(\"no array found to check Keywords\");\n//   }\n// };\n// const FinalOutput = async () => {\n//   const keyData = await filterJobs();\n//   const finalData = [];\n//   if (keyData) {\n//     for (let item of keyData) {\n//       if (\n//         item.Job_Position !== undefined &&\n//         item.Company_Name !== undefined &&\n//         item.Job_Date !== undefined &&\n//         item.Job_url !== undefined\n//       ) {\n//         const jobTitle = item.Job_Position.trim();\n//         const company = item.Company_Name.trim();\n//         const date = item.Job_Date.trim();\n//         const location = item.Job_Location.trim();\n//         finalData.push({\n//           Job_Position: jobTitle,\n//           Company_Name: company,\n//           Job_Location: location,\n//           Job_Date: date,\n//           Job_Url: item.Job_url,\n//         });\n//       }\n//     }\n//     return finalData;\n//   } else {\n//     console.log(\"no array found to remove space\");\n//   }\n// };\n// async function getRemainingData() {\n//   const position_title = [];\n//   const company_name = [];\n//   const date = [];\n//   const job_Url = [];\n//   const location = [];\n//   const finalArray = [];\n//   const url = \"https://www.cebuitjobs.com\";\n//   for (let i = 0; i !== 143; i += 13) {\n//     await axios\n//       .get(url + `/more/${i}`)\n//       .then(function (res) {\n//         const $ = cheerio.load(res.data);\n//         $('div[class=\"card-body\"]').each(function (index, element) {\n//           if ($(element).find(\"img\").length === 1) {\n//             $(element)\n//               .find(\"h5\")\n//               .each(function (index, job) {\n//                 position_title.push($(job).text());\n//               });\n//             $(element)\n//               .find(\"img\")\n//               .each(function (index, company) {\n//                 company_name.push($(company).attr(\"alt\"));\n//               });\n//             $(element)\n//               .find(\"h6\")\n//               .each(function (index, jobDate) {\n//                 date.push($(jobDate).text());\n//               });\n//             $(element)\n//               .find(\"span:first-of-type\")\n//               .each(function (index, jobLocation) {\n//                 location.push($(jobLocation).text());\n//               });\n//             $(element)\n//               .find(\"h5 a\")\n//               .each(function (index, url) {\n//                 job_Url.push($(url).attr(\"href\"));\n//               });\n//           }\n//         });\n//       })\n//       .catch(function (err) {\n//         console.log(\"Error fetching\", err);\n//       });\n//   }\n//   for (let i = 0; i <= position_title.length; i++) {\n//     if (\n//       position_title[i] !== undefined &&\n//       company_name[i] !== undefined &&\n//       date[i] !== undefined &&\n//       job_Url[i] !== undefined\n//     ) {\n//       finalArray.push({\n//         Job_Position: position_title[i],\n//         Company_Name: company_name[i],\n//         Job_Location: location[i],\n//         Job_Date: date[i],\n//         Job_url: job_Url[i],\n//       });\n//     }\n//   }\n//   // console.log(\"array:\", finalArray);\n//   return axios.all(finalArray).then((res) => {\n//     return res;\n//   });\n// }\n\n\nconst indeed = require(\"indeed-scraper\");\n\nconst ScrapeData = () => {\n  const queryOptions = {\n    host: \"www.indeed.com.ph\",\n    query: \"Software\",\n    city: \"Cebu\",\n    radius: \"30\",\n    level: \"mid_level\",\n    jobType: \"fulltime\",\n    maxAge: \"30\",\n    sort: \"date\",\n    limit: 100\n  };\n  return indeed.query(queryOptions).then(res => {\n    return res;\n  });\n};\n\nconst MidJobData = async () => {\n  const mid_level = await ScrapeData();\n  const length = mid_level.length;\n  return {\n    mid_level,\n    length\n  };\n};\n\nmodule.exports = MidJobData;","map":{"version":3,"sources":["C:/Users/chris/Desktop/Jobaho/data/midData.js"],"names":["cheerio","require","axios","indeed","ScrapeData","queryOptions","host","query","city","radius","level","jobType","maxAge","sort","limit","then","res","MidJobData","mid_level","length","module","exports"],"mappings":"AAAA,MAAMA,OAAO,GAAGC,OAAO,CAAC,SAAD,CAAvB;;AACA,MAAMC,KAAK,GAAGD,OAAO,CAAC,OAAD,CAArgBAAD,CAAtB;;AAEA,MAAMG,UAAU,GAAG,MAAM;AACvB,QAAMC,YAAY,GAAG;AACnBC,IAAAA,IAAI,EAAE,mBADa;AAEnBC,IAAAA,KAAK,EAAE,UAFY;AAGnBC,IAAAA,IAAI,EAAE,MAHa;AAInBC,IAAAA,MAAM,EAAE,IAJW;AAKnBC,IAAAA,KAAK,EAAE,WALY;AAMnBC,IAAAA,OAAO,EAAE,UANU;AAOnBC,IAAAA,MAAM,EAAE,IAPW;AAQnBC,IAAAA,IAAI,EAAE,MARa;AASnBC,IAAAA,KAAK,EAAE;AATY,GAArB;AAYA,SAAOX,MAAM,CAACI,KAAP,CAAaF,YAAb,EAA2BU,IAA3B,CAAiCC,GAAD,IAAS;AAC9C,WAAOA,GAAP;AACD,GAFM,CAAP;AAGD,CAhBD;;AAkBA,MAAMC,UAAU,GAAG,YAAY;AAC7B,QAAMC,SAAS,GAAG,MAAMd,UAAU,EAAlC;AACA,QAAMe,MAAM,GAAGD,SAAS,CAACC,MAAzB;AAEA,SAAO;AAAED,IAAAA,SAAF;AAAaC,IAAAA;AAAb,GAAP;AACD,CALD;;AAOAC,MAAM,CAACC,OAAP,GAAiBJ,UAAjB","sourcesContent":["const cheerio = require(\"cheerio\");\r\nconst axios = require(\"axios\");\r\n\r\n// const filterJobs = async () => {\r\n//   const arr = await getRemainingData();\r\n//   const keywords = [\r\n//     \"Associate\",\r\n//     \"Entry-level\",\r\n//     \"Junior\",\r\n//     \"Jr\",\r\n//     \"Fresh\",\r\n//     \"Fresh-Graduate\",\r\n//     \"Senior\",\r\n//     \"Sr\",\r\n//   ];\r\n//   const arrKeywordsFinal = [];\r\n\r\n//   if (arr != 0 || arr != undefined) {\r\n//     for (let item of arr) {\r\n//       const exists = keywords.some((res) => item.Job_Position.includes(res));\r\n\r\n//       if (!exists) {\r\n//         arrKeywordsFinal.push(item);\r\n//       }\r\n//     }\r\n//     return arrKeywordsFinal;\r\n//   } else {\r\n//     console.log(\"no array found to check Keywords\");\r\n//   }\r\n// };\r\n\r\n// const FinalOutput = async () => {\r\n//   const keyData = await filterJobs();\r\n//   const finalData = [];\r\n\r\n//   if (keyData) {\r\n//     for (let item of keyData) {\r\n//       if (\r\n//         item.Job_Position !== undefined &&\r\n//         item.Company_Name !== undefined &&\r\n//         item.Job_Date !== undefined &&\r\n//         item.Job_url !== undefined\r\n//       ) {\r\n//         const jobTitle = item.Job_Position.trim();\r\n//         const company = item.Company_Name.trim();\r\n//         const date = item.Job_Date.trim();\r\n//         const location = item.Job_Location.trim();\r\n\r\n//         finalData.push({\r\n//           Job_Position: jobTitle,\r\n//           Company_Name: company,\r\n//           Job_Location: location,\r\n//           Job_Date: date,\r\n//           Job_Url: item.Job_url,\r\n//         });\r\n//       }\r\n//     }\r\n\r\n//     return finalData;\r\n//   } else {\r\n//     console.log(\"no array found to remove space\");\r\n//   }\r\n// };\r\n\r\n// async function getRemainingData() {\r\n//   const position_title = [];\r\n//   const company_name = [];\r\n//   const date = [];\r\n//   const job_Url = [];\r\n//   const location = [];\r\n//   const finalArray = [];\r\n\r\n//   const url = \"https://www.cebuitjobs.com\";\r\n//   for (let i = 0; i !== 143; i += 13) {\r\n//     await axios\r\n//       .get(url + `/more/${i}`)\r\n//       .then(function (res) {\r\n//         const $ = cheerio.load(res.data);\r\n\r\n//         $('div[class=\"card-body\"]').each(function (index, element) {\r\n//           if ($(element).find(\"img\").length === 1) {\r\n//             $(element)\r\n//               .find(\"h5\")\r\n//               .each(function (index, job) {\r\n//                 position_title.push($(job).text());\r\n//               });\r\n\r\n//             $(element)\r\n//               .find(\"img\")\r\n//               .each(function (index, company) {\r\n//                 company_name.push($(company).attr(\"alt\"));\r\n//               });\r\n\r\n//             $(element)\r\n//               .find(\"h6\")\r\n//               .each(function (index, jobDate) {\r\n//                 date.push($(jobDate).text());\r\n//               });\r\n\r\n//             $(element)\r\n//               .find(\"span:first-of-type\")\r\n//               .each(function (index, jobLocation) {\r\n//                 location.push($(jobLocation).text());\r\n//               });\r\n\r\n//             $(element)\r\n//               .find(\"h5 a\")\r\n//               .each(function (index, url) {\r\n//                 job_Url.push($(url).attr(\"href\"));\r\n//               });\r\n//           }\r\n//         });\r\n//       })\r\n//       .catch(function (err) {\r\n//         console.log(\"Error fetching\", err);\r\n//       });\r\n//   }\r\n\r\n//   for (let i = 0; i <= position_title.length; i++) {\r\n//     if (\r\n//       position_title[i] !== undefined &&\r\n//       company_name[i] !== undefined &&\r\n//       date[i] !== undefined &&\r\n//       job_Url[i] !== undefined\r\n//     ) {\r\n//       finalArray.push({\r\n//         Job_Position: position_title[i],\r\n//         Company_Name: company_name[i],\r\n//         Job_Location: location[i],\r\n//         Job_Date: date[i],\r\n//         Job_url: job_Url[i],\r\n//       });\r\n//     }\r\n//   }\r\n//   // console.log(\"array:\", finalArray);\r\n//   return axios.all(finalArray).then((res) => {\r\n//     return res;\r\n//   });\r\n// }\r\n\r\nconst indeed = require(\"indeed-scraper\");\r\n\r\nconst ScrapeData = () => {\r\n  const queryOptions = {\r\n    host: \"www.indeed.com.ph\",\r\n    query: \"Software\",\r\n    city: \"Cebu\",\r\n    radius: \"30\",\r\n    level: \"mid_level\",\r\n    jobType: \"fulltime\",\r\n    maxAge: \"30\",\r\n    sort: \"date\",\r\n    limit: 100,\r\n  };\r\n\r\n  return indeed.query(queryOptions).then((res) => {\r\n    return res;\r\n  });\r\n};\r\n\r\nconst MidJobData = async () => {\r\n  const mid_level = await ScrapeData();\r\n  const length = mid_level.length;\r\n\r\n  return { mid_level, length };\r\n};\r\n\r\nmodule.exports = MidJobData;\r\n"]},"metadata":{},"sourceType":"script"}