{"ast":null,"code":"import JuniorJobData from \"../../data/juniorData\";\nexport default (async (req, res) => {\n  const data = [];\n  const {\n    keyword\n  } = req.query; // Keyword is case sensitive\n\n  const retval = await JuniorJobData();\n\n  if (keyword) {\n    for (let item of retval.entry_level) {\n      const exists = item.Job_Position.toLowerCase().includes(keyword.toLowerCase());\n\n      if (exists) {\n        data.push(item);\n      }\n    }\n\n    res.status(200).json({\n      entry_level: data,\n      length: data.length\n    });\n  } else {\n    res.status(200).json(retval);\n  }\n});","map":{"version":3,"sources":["C:/Users/chris/Desktop/Jobaho/pages/api/juniorAPI.js"],"names":["JuniorJobData","req","res","data","keyword","query","retval","item","entry_level","exists","Job_Position","toLowerCase","includes","push","status","json","length"],"mappings":"AAAA,OAAOA,aAAP,MAA0B,uBAA1B;AAEA,gBAAe,OAAOC,GAAP,EAAYC,GAAZ,KAAoB;AACjC,QAAMC,IAAI,GAAG,EAAb;AACA,QAAM;AAAEC,IAAAA;AAAF,MAAcH,GAAG,CAACI,KAAxB,CAFiC,CAEF;;AAC/B,QAAMC,MAAM,GAAG,MAAMN,aAAa,EAAlC;;AAEA,MAAII,OAAJ,EAAa;AACX,SAAK,IAAIG,IAAT,IAAiBD,MAAM,CAACE,WAAxB,EAAqC;AACnC,YAAMC,MAAM,GAAGF,IAAI,CAACG,YAAL,CAAkBC,WAAlB,GAAgCC,QAAhC,CACbR,OAAO,CAACO,WAAR,EADa,CAAf;;AAIA,UAAIF,MAAJ,EAAY;AACVN,QAAAA,IAAI,CAACU,IAAL,CAAUN,IAAV;AACD;AACF;;AAEDL,IAAAA,GAAG,CAACY,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqB;AAAEP,MAAAA,WAAW,EAAEL,IAAf;AAAqBa,MAAAA,MAAM,EAAEb,IAAI,CAACa;AAAlC,KAArB;AACD,GAZD,MAYO;AACLd,IAAAA,GAAG,CAACY,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqBT,MAArB;AACD;AACF,CApBD","sourcesContent":["import JuniorJobData from \"../../data/juniorData\";\r\n\r\nexport default async (req, res) => {\r\n  const data = [];\r\n  const { keyword } = req.query; // Keyword is case sensitive\r\n  const retval = await JuniorJobData();\r\n\r\n  if (keyword) {\r\n    for (let item of retval.entry_level) {\r\n      const exists = item.Job_Position.toLowerCase().includes(\r\n        keyword.toLowerCase()\r\n      );\r\n\r\n      if (exists) {\r\n        data.push(item);\r\n      }\r\n    }\r\n\r\n    res.status(200).json({ entry_level: data, length: data.length });\r\n  } else {\r\n    res.status(200).json(retval);\r\n  }\r\n};\r\n"]},"metadata":{},"sourceType":"module"}