{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nvar __jsx = React.createElement;\nimport React, { Component } from \"react\";\nimport useSWR from \"swr\";\nimport JobCardsLayout from \"../components/JobsectionCards\";\nimport fetch from \"isomorphic-unfetch\";\nimport { Box, Flex, Link, Text, Button, ButtonGroup } from \"@chakra-ui/core\";\n\nvar fetcher = function fetcher(url) {\n  var res, data;\n  return _regeneratorRuntime.async(function fetcher$(_context) {\n    while (1) {\n      switch (_context.prev = _context.next) {\n        case 0:\n          _context.next = 2;\n          return _regeneratorRuntime.awrap(fetch(url));\n\n        case 2:\n          res = _context.sent;\n          _context.next = 5;\n          return _regeneratorRuntime.awrap(res.json());\n\n        case 5:\n          data = _context.sent;\n\n          if (!(res.status !== 200)) {\n            _context.next = 8;\n            break;\n          }\n\n          throw new Error(\"error\", data.message);\n\n        case 8:\n          return _context.abrupt(\"return\", data);\n\n        case 9:\n        case \"end\":\n          return _context.stop();\n      }\n    }\n  }, null, null, null, Promise);\n};\n\nexport default function FetchData() {\n  var _useSWR = useSWR(\"/api/seniorAPI\", fetcher),\n      data = _useSWR.data,\n      error = _useSWR.error; // console.log(\"Data:\", data);\n\n\n  if (error) return __jsx(\"div\", null, \"Failed to load entry level api\");\n  if (!data) return __jsx(\"div\", null, \"Loading...\"); //BOX ----> DIV\n\n  return __jsx(JobCardsLayout, null, __jsx(Box, null, __jsx(Text, {\n    color: \"white\",\n    m: 5,\n    textAlign: \"center\",\n    fontSize: \"30px\",\n    fontFamily: \"Sen\"\n  }, \"Senior Level Jobs\"), __jsx(Flex, {\n    flexWrap: \"wrap\",\n    justifyContent: \"center\"\n  }, data.map(function (res, index) {\n    var title = res.title,\n        company = res.company,\n        location = res.location,\n        url = res.url;\n    return __jsx(Box, {\n      m: 3,\n      borderWidth: \"1px\",\n      bg: \"white\",\n      flex: \"0 1 24%\",\n      p: 6,\n      rounded: \"lg\",\n      mt: 5,\n      key: index\n    }, __jsx(Box, null, __jsx(Box, {\n      color: \"gray.500\",\n      fontWeight: \"semibold\",\n      letterSpacing: \"wide\",\n      textTransform: \"uppercase\",\n      fontSize: \"xs\",\n      textAlign: \"center\"\n    }, company)), __jsx(Box, {\n      mt: \"2\",\n      fontWeight: \"semibold\",\n      fontSize: \"lg\",\n      textAlign: \"center\",\n      color: \"blue.600\"\n    }, __jsx(Link, {\n      href: url,\n      isExternal: true\n    }, title)), __jsx(Box, {\n      mt: \"2\",\n      color: \"gray.600\",\n      fontSize: \"sm\",\n      textAlign: \"center\"\n    }, location));\n  }))));\n}","map":{"version":3,"sources":["C:/Users/chris/Desktop/jobaho/pages/senior.js"],"names":["React","Component","useSWR","JobCardsLayout","fetch","Box","Flex","Link","Text","Button","ButtonGroup","fetcher","url","res","json","data","status","Error","message","FetchData","error","map","index","title","company","location"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,MAAP,MAAmB,KAAnB;AACA,OAAOC,cAAP,MAA2B,+BAA3B;AACA,OAAOC,KAAP,MAAkB,oBAAlB;AAEA,SAASC,GAAT,EAAcC,IAAd,EAAoBC,IAApB,EAA0BC,IAA1B,EAAgCC,MAAhC,EAAwCC,WAAxC,QAA2D,iBAA3D;;AAEA,IAAMC,OAAO,GAAG,SAAVA,OAAU,CAAOC,GAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,2CACIR,KAAK,CAACQ,GAAD,CADT;;AAAA;AACRC,UAAAA,GADQ;AAAA;AAAA,2CAEKA,GAAG,CAACC,IAAJ,EAFL;;AAAA;AAERC,UAAAA,IAFQ;;AAAA,gBAIVF,GAAG,CAACG,MAAJ,KAAe,GAJL;AAAA;AAAA;AAAA;;AAAA,gBAKN,IAAIC,KAAJ,CAAU,OAAV,EAAmBF,IAAI,CAACG,OAAxB,CALM;;AAAA;AAAA,2CAOPH,IAPO;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,CAAhB;;AAUA,eAAe,SAASI,SAAT,GAAqB;AAAA,gBACVjB,MAAM,CAAC,gBAAD,EAAmBS,OAAnB,CADI;AAAA,MAC1BI,IAD0B,WAC1BA,IAD0B;AAAA,MACpBK,KADoB,WACpBA,KADoB,EAElC;;;AAEA,MAAIA,KAAJ,EAAW,OAAO,oDAAP;AACX,MAAI,CAACL,IAAL,EAAW,OAAO,gCAAP,CALuB,CAOlC;;AACA,SACE,MAAC,cAAD,QACE,MAAC,GAAD,QACE,MAAC,IAAD;AACE,IAAA,KAAK,EAAC,OADR;AAEE,IAAA,CAAC,EAAE,CAFL;AAGE,IAAA,SAAS,EAAC,QAHZ;AAIE,IAAA,QAAQ,EAAC,MAJX;AAKE,IAAA,UAAU,EAAC;AALb,yBADF,EAUE,MAAC,IAAD;AAAM,IAAA,QAAQ,EAAC,MAAf;AAAsB,IAAA,cAAc,EAAC;AAArC,KACGA,IAAI,CAACM,GAAL,CAAS,UAACR,GAAD,EAAMS,KAAN,EAAgB;AAAA,QAChBC,KADgB,GACkBV,GADlB,CAChBU,KADgB;AAAA,QACTC,OADS,GACkBX,GADlB,CACTW,OADS;AAAA,QACAC,QADA,GACkBZ,GADlB,CACAY,QADA;AAAA,QACUb,GADV,GACkBC,GADlB,CACUD,GADV;AAExB,WACE,MAAC,GAAD;AACE,MAAA,CAAC,EAAE,CADL;AAEE,MAAA,WAAW,EAAC,KAFd;AAGE,MAAA,EAAE,EAAC,OAHL;AAIE,MAAA,IAAI,EAAC,SAJP;AAKE,MAAA,CAAC,EAAE,CALL;AAME,MAAA,OAAO,EAAC,IANV;AAOE,MAAA,EAAE,EAAE,CAPN;AAQE,MAAA,GAAG,EAAEU;AARP,OAUE,MAAC,GAAD,QACE,MAAC,GAAD;AACE,MAAA,KAAK,EAAC,UADR;AAEE,MAAA,UAAU,EAAC,UAFb;AAGE,MAAA,aAAa,EAAC,MAHhB;AAIE,MAAA,aAAa,EAAC,WAJhB;AAKE,MAAA,QAAQ,EAAC,IALX;AAME,MAAA,SAAS,EAAC;AANZ,OAQGE,OARH,CADF,CAVF,EAsBE,MAAC,GAAD;AACE,MAAA,EAAE,EAAC,GADL;AAEE,MAAA,UAAU,EAAC,UAFb;AAGE,MAAA,QAAQ,EAAC,IAHX;AAIE,MAAA,SAAS,EAAC,QAJZ;AAKE,MAAA,KAAK,EAAC;AALR,OAOE,MAAC,IAAD;AAAM,MAAA,IAAI,EAAEZ,GAAZ;AAAiB,MAAA,UAAU;AAA3B,OACGW,KADH,CAPF,CAtBF,EAiCE,MAAC,GAAD;AAAK,MAAA,EAAE,EAAC,GAAR;AAAY,MAAA,KAAK,EAAC,UAAlB;AAA6B,MAAA,QAAQ,EAAC,IAAtC;AAA2C,MAAA,SAAS,EAAC;AAArD,OACGE,QADH,CAjCF,CADF;AAuCD,GAzCA,CADH,CAVF,CADF,CADF;AA2DD","sourcesContent":["import React, { Component } from \"react\";\r\nimport useSWR from \"swr\";\r\nimport JobCardsLayout from \"../components/JobsectionCards\";\r\nimport fetch from \"isomorphic-unfetch\";\r\n\r\nimport { Box, Flex, Link, Text, Button, ButtonGroup } from \"@chakra-ui/core\";\r\n\r\nconst fetcher = async (url) => {\r\n  const res = await fetch(url);\r\n  const data = await res.json();\r\n\r\n  if (res.status !== 200) {\r\n    throw new Error(\"error\", data.message);\r\n  }\r\n  return data;\r\n};\r\n\r\nexport default function FetchData() {\r\n  const { data, error } = useSWR(\"/api/seniorAPI\", fetcher);\r\n  // console.log(\"Data:\", data);\r\n\r\n  if (error) return <div>Failed to load entry level api</div>;\r\n  if (!data) return <div>Loading...</div>;\r\n\r\n  //BOX ----> DIV\r\n  return (\r\n    <JobCardsLayout>\r\n      <Box>\r\n        <Text\r\n          color=\"white\"\r\n          m={5}\r\n          textAlign=\"center\"\r\n          fontSize=\"30px\"\r\n          fontFamily=\"Sen\"\r\n        >\r\n          Senior Level Jobs\r\n        </Text>\r\n        <Flex flexWrap=\"wrap\" justifyContent=\"center\">\r\n          {data.map((res, index) => {\r\n            const { title, company, location, url } = res;\r\n            return (\r\n              <Box\r\n                m={3}\r\n                borderWidth=\"1px\"\r\n                bg=\"white\"\r\n                flex=\"0 1 24%\"\r\n                p={6}\r\n                rounded=\"lg\"\r\n                mt={5}\r\n                key={index}\r\n              >\r\n                <Box>\r\n                  <Box\r\n                    color=\"gray.500\"\r\n                    fontWeight=\"semibold\"\r\n                    letterSpacing=\"wide\"\r\n                    textTransform=\"uppercase\"\r\n                    fontSize=\"xs\"\r\n                    textAlign=\"center\"\r\n                  >\r\n                    {company}\r\n                  </Box>\r\n                </Box>\r\n                <Box\r\n                  mt=\"2\"\r\n                  fontWeight=\"semibold\"\r\n                  fontSize=\"lg\"\r\n                  textAlign=\"center\"\r\n                  color=\"blue.600\"\r\n                >\r\n                  <Link href={url} isExternal>\r\n                    {title}\r\n                  </Link>\r\n                </Box>\r\n                <Box mt=\"2\" color=\"gray.600\" fontSize=\"sm\" textAlign=\"center\">\r\n                  {location}\r\n                </Box>\r\n              </Box>\r\n            );\r\n          })}\r\n        </Flex>\r\n      </Box>\r\n    </JobCardsLayout>\r\n  );\r\n}\r\n"]},"metadata":{},"sourceType":"module"}